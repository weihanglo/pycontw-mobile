{"314386410792550475":{"abstract":"一位小工程師，經常需要取得客戶資料又遭遇客戶不開放 API 接口來取得資料。為此經常需要撰寫爬蟲程式爬資料。但爬蟲任務變多時管理變得複雜，早期會透過 Linux crontab 設定時刻表來安排爬蟲任務，卻容易出現各種例外，例如：透過 selenium 來爬網頁可能因為不可預期使得瀏覽器 driver 沒有被正常關閉的錯誤，進而可能產生非常多死掉的 processes 經常做各種錯誤檢查（不管透過自動化程式或是人工）。幾次因為不同的錯誤原因造成無法正常取得資料加上工程師講求效率不喜歡人工檢查（懶惰）的性格因而萌生開發念頭。\r\n網站主要透過 Django, Django-Q 與 ORM(Broker 也可選擇 redis 等)作為主架構。會透過案例分享撰寫一個可以被設定與監控的 task（任務），這個 task 包含任務的流程且會產生出序列的 log 並且紀錄。透過 Django‘s Admin 後台管理介面去設定 Django-Q 並建立的任務排程。最後則會展示前端介面設計，讓管理者透過序列的 log 快速地瀏覽歷程紀錄以及發生錯誤時的訊息與狀態。\r\n雖然曾經聽過其他人分享透過 Luigi 或是 Airflow 來處理排程任務。但本篇希望結合 Django 來作為框架但會討論比較。\r\n聆聽這個演講需要一點 Django 的背景知識以及撰寫過爬蟲經驗。","category":"WEB","detailed_description":"這個演講會提及 [Django-Q](https://django-q.readthedocs.io/en/latest/) 這個用於 Django 任務管理套件。並且撰寫一個運作在上面的 task。將會提到幾個有趣的經驗：\r\n\r\n* 快速整合 job script(crawler flow) 進入 Django-Q 建構的任務管理內。\r\n通常在撰寫爬蟲時都是一段 job script，將會分享如何將每個爬蟲改變成類似 Django 內的 app，這樣就能快速套入 Django-Q 的任務。\r\n* tasks 的流程如何紀錄\r\n因為爬蟲程式的訊息會採用 logging 的方式產生，是一個 stdout 的訊息，將告訴大家怎麼把這份訊息擷取並且記錄。\r\n* lazy_logger 套件分享\r\n呈上，這是一個 2016 年 pycontw sprint 活動開發的套件，將會接續介紹如何用這個套件簡化 logging 訊息的產生與紀錄。\r\n* Django 後台排程與前端介面\r\n當一個 task 順利建立且可以成功運作、產生紀錄與儲存後將介紹如何透過 Django-Admin 後台設定排程與設計一個前端監控介面的頁面。","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Yi-Chieh Chen(Jason) earned his master degree at the graduate school of Institute of Healthcare Information Management in CCU. He has served a senior software R & D engineer for 5 years at Pegatron. He is also the Program Chair of PyCon Taiwan 2017.\r\n\r\nHe love Python's clean, and had a sense of achievement when he finished the complex work in the clean code. Yi-Chieh like using Django framework to make system for other engineers to get done job more easily and also like to integration kind of different tools together. Recent now he also interested in research Machine Learning and Deep Learning.\r\n\r\nYi-Chieh Chen's blog is https://chairco.github.io, although it's not updated frequently, he will like to share on here if he has anything new find out","email":"chairco@gmail.com","facebook_profile_url":"https://www.facebook.com/chairco","github_id":"chairco","photo_url":"https://tw.pycon.org/staging/media/avatars/75710217181986912/2017-05-05-P1010496.jpg","speaker_name":"Yi-Chieh Chen","twitter_id":"ChaircoChen"}],"title":"用 Django 建立一個可以設定爬蟲排程任務與監控的網站"},"318829901387923532":{"abstract":"I will be talking about Global-Interpreter-Lock (GIL) in Python. It's a mutex that prevents multiple native threads from running in parallel. In essence, this says that a python program cannot do more than one thing at once via threading.","category":"INTNL","detailed_description":"There is a lot of misconception in the majority of Python Programmers regarding Global Interpreter Lock[1][2]. Most of them think its the worst part of Python. I will try to demonstrate how it actually works and how we can leverage multiple CPU cores for multithreading[3] for I/O and CPU Bound task using C-Extensions. I will also show some comparisons with different implementations of Python and the presence or absence of GIL in those, to answer questions like, why we can't just remove it from CPython and solve all our problems or why Jython performs better in Multithreading for CPU Bound task.\r\n\r\n\r\n[1] https://wiki.python.org/moin/GlobalInterpreterLock\r\n[2] https://en.wikipedia.org/wiki/Global_interpreter_lock\r\n[3] https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)","language":"ENEN","python_level":"EXPERIENCED","recording_policy":true,"slide_link":"","speakers":[{"bio":"I am a Core Developer at SymPy, a Python Library for Symbolic Computation, which is used in scientific computing. I worked under Python Software Foundation in Google Summer of Code 2015 to improve the Solvers module of SymPy. I Mentored couple of students in Google Summer of Code 2016 for SymPy Project. I am also one of the Organisers at Python Delhi User Group and a volunteer for Python Conferences in and around India. I have spoken at various Python Conferences including PyCon UK 2016, PyGotham 2016, PyCon India 2016, PyCon Asia Pacific 2016, SciPy 2016, Austin and also at various local user group meetups in my City. All of my talks can be seen here: http://iamit.in/talks","email":"dtu.amit@gmail.com","facebook_profile_url":"https://www.facebook.com/iaktech","github_id":"aktech","speaker_name":"Amit Kumar","twitter_id":"iaktech"}],"title":"Lets Talk About GIL!"},"319090797213384781":{"abstract":"想成為優秀開發者，大量閱讀開源專案程式碼是必要的。本演講將分享講者閱讀開源專案時所發展與實踐之方法及技巧。內容包含降低專案複雜度、修改 module dependency 追 code 工具、專案統計數據分析、深度與廣度走訪專案程式碼。","category":"EDU","detailed_description":"### 演講簡報\r\n* [簡報連結](https://docs.google.com/presentation/d/1HwBrETgmEz6-igEVaPAtQPWyuBljyFyvXtKzHLSVaMk/edit?usp=sharing)\r\n\r\n### 為何挑選 Viper 專案與好處\r\n* Viper 主要開發者 Claudio Guarnieri 所撰寫的程式碼以品質精良、可讀性高著稱。該作者另一知名資安專案 Cuckoo Sandbox 也亦為高品質專案。希望藉由高品質、可讀性高程式碼之導讀，使初學者提高讀 code 的意願，進而從中享受讀 code 的樂趣。\r\n* 講者本身職業為資安工程師，平日需分析惡意程式。Viper 為分析惡意程式的 framework，開發與整合許多實用分析工具。因想了解自己每天使用之工具是如何撰寫而成，進而開始鑽研專案程式碼。\r\n\r\n\r\n### 講者研究 Viper 的筆記 (簡報上也可找到)\r\n* [以 module dependency 所建構之專案架構](https://github.com/18z/viper-research/blob/master/materials/2-46a2a/viper-statistics-v2.pdf) - 簡報上會呈現如何建構\r\n* [專案深度走訪筆記 part1](https://github.com/18z/viper-research/blob/master/materials/2-46a2a/dive-in.md) - 將每隻程式逐行解讀\r\n* [專案深度走訪筆記 part2](https://github.com/18z/viper-research/blob/master/materials/2-46a2a/lego.md) - 以摘要方式描述該隻程式功能與特色，同時將每隻程式視為一塊樂高積木，尋找積木組合出現比例高的部分，並將組合後的功能做描述\r\n* [廣度走訪筆記](https://github.com/18z/viper-research/blob/master/materials/2-46a2a/viper-tour.md) - 搭配先前以 module dependency 所建構之專案架構，定義專案每個邏輯的起點與終點，並完整走訪所有路徑之筆記。\r\n\r\n\r\n### 使用的第三方工具：\r\n* [snakefood](https://pypi.python.org/pypi/snakefood/1.4) - 視覺化 python module dependency 工具。另，在簡報中第 14 頁呈現 snakefood 修改版，使得梳理 module dependency 之效率提升。\r\n* [modulegraph](https://pythonhosted.org/modulegraph/) - 視覺化 python module dependency 工具\r\n* [pydegraph](http://www.tarind.com/depgraph.html) - 視覺化 python module dependency 工具","language":"ZHZH","python_level":"NOVICE","recording_policy":true,"slide_link":"https://docs.google.com/presentation/d/1HwBrETgmEz6-igEVaPAtQPWyuBljyFyvXtKzHLSVaMk/edit?usp=sharing","speakers":[{"bio":"Software Archaeologist. Love to dig into the history of software.","email":"xspiritualx@gmail.com","facebook_profile_url":"","github_id":"18z","speaker_name":"陳坤裕 KunYu Chen","twitter_id":""}],"title":"Python 開源軟體考古 - 以 Viper 為例"},"319284977214685262":{"abstract":"IoT 產業蓬勃發展，終端設備的性能也隨著摩爾定律快速成長。最近兩年因為 MicroPython 的出現，使得 Python 能夠運行在越來越多硬幣大小的裝置上，開發過程快速便利，裝置功能也越顯強大。\r\n\r\n  MicroPython 是什麼? 能力與限制為何? 如何用它來開發終端設備? IoT系統的開發與管理 是否可以因而有更多的彈性與可能?\r\n\r\n  這個talk中會介紹 MicroPython 的特性與限制、使用 MicroPython 在 ESP8266(WiFi MCU) 模組上開發程式的步驟與過程；並且會簡介 MQTT 的架構與流程，並與 AMQP、Celery、IPython Parallel 做比較，期望能提供一個基本的概念。\r\n\r\n  實作驗證上，基於類似 IPython Parallel 的架構，以 Mosquitto 作為 MQTT broker，運用幾顆運行 MicroPython 的 ESP8266 模組做為 workers(engines) 來建構小型的 cluster，並且受惠於 Python 的特性，可以動態地傳送 任意的程式碼 要求遠端端點執行，因此端點上的運行邏輯隨時可變，並不受限於預設的程式碼，可以經由中央主機讀寫各遠端節點上的GPIO來進行動態控制，也可以透過網路佈署程式碼交由各節點獨立運行。本talk將以此系統作為範例，說明 MicroPython、MQTT 搭配運用的方式，探討 Python 在建置 IoT 系統上的優勢。","category":"EMBED","detailed_description":"IoT 系統的末端節點通常是由小型的嵌入式設備來擔任，當節點數量較多時，之間資訊交換的複雜性也就跟著提高，而系統在佈署或改版調整時，更加需要一個可以由遠端主機 動態規劃、佈署、管理與控制的機制，才能具有省時省力、動態與彈性的效果。 隨著 [MicroPython](https://micropython.org/) 的出現，Python 終於得以運行在硬幣大小的終端設備上，帶來許多新的可能性，同時，底層的系統架構與訊息機制也有決定性的影響。    \r\n  \r\n  許多 IoT 的主流 frameworks 都奠基於 [MQTT](http://mqtt.org/) 通訊協定，屬於一種在 broker-client 架構上的 publisher / subscriber 機制，雖然推拉訊息的方式相當具有彈性，然而對訊息的操作僅有 publish 和 subscribe 兩種方法，普遍缺少 [RPC(Remote Procedure Call)](https://en.wikipedia.org/wiki/Remote_procedure_call) 的功能，在撰寫程式與建構系統的時候會受到某種程度的限制。 反觀 有很多優秀的 message-queue frameworks，例如 [Celery](http://www.celeryproject.org/) 和 [IPython Parallel](https://ipython.org/ipython-doc/3/parallel/parallel_intro.html)，有著類似的 broker-client 架構與 producer / consumer 機制，並且具有 RPC 的功能，造就了強大的 平行/分散式運算的環境。    \r\n  \r\n  因此，這個 talk 中除了會介紹 MicroPython 的特性與限制、在 [ESP8266](https://www.google.com.tw/search?q=ESP8266)(WiFi MCU) 模組上開發程式的步驟之外，也將說明 如何基於類似 IPython Parallel 的架構，以 [Mosquitto](https://mosquitto.org/) 作為 broker，使用幾顆運行 MicroPython 的 [ESP8266](https://www.google.com.tw/search?q=ESP8266) 模組做為 workers(engines) 來建構一個小型的 cluster。並且，受惠於 Python 的特性，可以動態地傳送任意的程式碼 要求遠端端點執行，因此端點上的運行邏輯隨時可變，並不受限於預設的程式碼，此外還實做了 RPC 的機制，在建構系統的程式方法上有更大的自由度。基於上述的機制，我們可以經由中央主機讀寫各遠端節點上的 GPIO 來進行動態控制，也可以透過網路佈署程式碼交由各節點獨立運行。 希望藉由說明建構本系統的過程，能讓聽眾能對 用 MicroPython 開發嵌入式裝置、使用 MQTT 通訊協定來傳遞訊息、IoT 系統佈署與管理的彈性需求上能有一個概念。","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Mostly worked in the fields of marketing, strategy-planning, and project-management; I am fascinated by the elegance of Python, and very interested in Machine-Learning and Data-Science.\r\n\r\n策略規劃 是專長，寫程式 是興趣，\r\nMachine-Learning 和 Data-Science 是最愛，\r\n對知識的渴望 與 領悟的喜悅 是我永恆的動力。","email":"Wei1234c@gmail.com","facebook_profile_url":"https://www.facebook.com/wei.lin.921025","github_id":"Wei1234c","photo_url":"https://tw.pycon.org/staging/media/avatars/68818188866945098/2016-04-24-Wei_8001.jpg","speaker_name":"Wei Lin","twitter_id":"Wei_1144"}],"title":"Elastic Network of Things with MQTT and MicroPython"},"319314010958725199":{"abstract":"As startup game makers, many people might be able to build a workable mobile game service,\r\nbut have no experience in building a stable, reliable, high performance commercial mobile game service.\r\nSometimes we feel that our code seems to be logical correct and should work,\r\nbut in reality it failed because we didn't avoid race condition very well, or we didn't apply caching mechanism appropriately.\r\nIn this talk, we will introduce how we built a game server, which is fully implemented in Python and Flask.\r\nWe are going to share some experiences with backend or online mobile game developers by showing the essence of Python code and Flask usage from game server.\r\nHope these guides will lead you to build a stable, reliable service in Python, and don't repeat the same mistakes we did before.\r\n\r\n\r\nDomain Knowledge:\r\n\tRSA or HMAC principle and usage\r\n\tHTTP protocol:\r\n\t\terror code\r\n\t\tcache mechanism\r\n\tAWS or GCP experience","category":"GAME","detailed_description":"What we will share at below chapter:\r\n\r\nVOEZ game play demo and connection layout\r\n\r\nPython code:\r\ngame play authorization and score uploading\r\ndatabase/storage layout & API for distributing current seasonal event revision and corresponding assets\r\nRedis database operation\r\norder of inter-server request and related state transition\r\npublish event game data to Amazon S3/Google Cloud Storage\r\nappend header \"Cache-Control\" under Flask framework, and make cache expire precisely at seasonal event switching\r\ncalculate how many consecutive days a player logged in\r\n\r\nCloud platform setting tips:\r\nWhat happened when we met DDoS","language":"ZHEN","python_level":"EXPERIENCED","recording_policy":true,"slide_link":"","speakers":[{"bio":"台灣某game會社的小小RD\r\n目前是PPRG(Perl Python Ruby Golang)熟手\r\nSmalltalk與Scheme基本教義派\r\n不是太奇怪的程式語言都會一些\r\n\r\n請多多指教⎝（˶′◡‵˶）⎠","email":"fieliapm@gmail.com","facebook_profile_url":"https://www.facebook.com/fieliapm","github_id":"fieliapm","photo_url":"https://tw.pycon.org/staging/media/avatars/93937369882820727/2017-03-14-himawari-xw_p1-1200.png","speaker_name":"郭學聰 (Hsueh-Tsung Kuo)","twitter_id":"fieliapm"}],"title":"after VOEZ launch - how to resolve problems of mobile game server development and service maintenance"},"320211463073431632":{"abstract":"身為一名投資新手，第一件事情往往就是到網路上蒐集各種資訊，無論是在臉書上加入投資類型的粉絲團，或是上Ptt去爬文。然而，這些資訊來源究竟是事後諸葛，還是真能料事如神呢？本演講將使用2016年Ptt股票版及特定臉書粉絲團資料，使用Python從資料蒐集(爬文)開始，建立資料庫並進行資料梳理，接著應用探索性資料分析、斷詞及建立詞向量空間等數理方法，從這些文字資料中找出有趣的現象，讓聽眾可以用不同的角度去閱讀這些資訊，找出屬於自己的投資心法。","category":"DATA","detailed_description":"#### 使用套件\r\n- 爬文：urllib2、facebook\r\n- 建立資料庫連結：psycopg2\r\n- 資料處理：pandas\r\n- 資料視覺化：matplotlib\r\n- 文字分析：gensim中word2vec、jieba、snownlp\r\n\r\n#### 大綱內容\r\n- 在**輿情分析**中，我們將透過基本的關鍵字篩選方法，找出討論樂生案及復興航空相關文章，並透過這些文章的數量、po時間點及作者等資訊進行資料挖掘找出洞見，並了解媒體及社群評論與意見，是否能對於股票市場造成影響\r\n- 在**情緒分析**中，我們將透過網路上的資源進行文章情緒分析，藉此了解相關文章作者對特定人物(川普)的感受。此外，在進行特定人物分析時，亦透過Word2Vec技術，找出哪些鄉民是支持川普？而哪些又是反對與中立？另外比對川普當選前後台股與大數據之間是否有很強的關聯性，並透過量化分析找出川普的鐵桿粉絲及極端反對者\r\n- 在**投資分析**中，我們將透過以上技術分析鄉民對該股價上漲與下跌的看法。此外，亦將結合真實股價資料，找出是否有某些鄉民真能料事如神","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Education            > NCCU Statistics\r\nWorking Experience   > Financial Holding Co. Ltd.\r\nProgramming Language > R, Python\r\nHonor                > EHC Champion/ Pixnet Hackathon Champion\r\nInterested Fields    > Machine Learning/ Data Visualization","email":"panda061325@gmail.com","facebook_profile_url":"https://www.facebook.com/profile.php?id=100001464274427","github_id":"","photo_url":"https://tw.pycon.org/staging/media/avatars/317914290679972038/2017-05-04-with_%E7%83%8F%E5%85%8B%E9%BA%97%E9%BA%97.jpg","speaker_name":"潘穎達(Panda)","twitter_id":""},{"bio":"在金融業服務的小資男，下班脫下制服後，開始研究python爬蟲程式和資料分析，希望透過大數據，提升金融服務品質和挖掘應用價值。","email":"light0326@livemail.tw","facebook_profile_url":"","github_id":"","photo_url":"https://tw.pycon.org/staging/media/avatars/330248779523424477/2017-03-02-Image_324e6be.jpg","speaker_name":"陳柏瑋","twitter_id":""}],"title":"用Python成為網路投資王"},"321329184263635026":{"abstract":"Do you want to own any project on Github or PyPI? Are you interested in developing open source project but do not know how to start? Do you want to understand key factors of failed projects in the future?\r\n\r\nIn this talk, speaker will share the story of his open source project - Sinon.PY.\r\nThis project is not a successful project. He believed that sharing a failed case may be helpful for you to avoid same fault, such as (1)Skills to prepare before you begin (2)Ideas to avoid (3)what will you learn.","category":"COM","detailed_description":"#### Q. What is Sinon.PY?####\r\n[Sinon.PY](https://github.com/note35/sinon) is a mocking library inspired by [Sinon.JS](http://sinonjs.org/). It provides a similar interface of Sinon.JS 1.9.\r\n\r\n#### Q. What is the content in this talk? ####\r\nThe speaker will share the entire story of this project, including motivations, plans, tasks, results and feedbacks.\r\n\r\n#### Welcome audiences with any python level ####\r\nSince this is a novice talk. The speaker welcome audiences with any python level. The talk is related to some deep terminologies, such as unittesting, python OOP. However the contents will be understandable for audiences who don't have those knowledges. Additionally, the main purpose of this talk is not the detailed techniques but my shared experiences.\r\n\r\nIn this talk, the speaker will give a simple demo. The related code will use some techniques whose level are higher than novice. However, The speaker plan to demo this code just for giving the purpose and showing difficulty of this project. Even if the audiences don't understand the code, it's still fine for them to listen to the story.","language":"ENEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Hi, I am Kir Chou.\r\n\r\n1. Python Lover （熱愛python）\r\n2. Full-stack Code Monkey （全端碼猴）\r\n3. StackOverflower （業餘堆疊溢位玩家）\r\n4. Open Source Contributor （輕度開源貢獻者）\r\n\r\nPython is love, python is life.","email":"610548@gmail.com","facebook_profile_url":"","github_id":"note35","photo_url":"https://tw.pycon.org/staging/media/avatars/321318826354409681/2017-02-18-10507047_10202136834611285_5402304932500660396_o.jpg","speaker_name":"Kir Chou","twitter_id":""}],"title":"Why do projects fail? Let's talk about the story of Sinon.PY"},"322153690393739347":{"abstract":"對生活的不滿足, 又沒有時間成為一個專業的投資(機)者, 不想依賴複雜又資訊爆炸的股市套裝軟體, 於是捲起袖子, 抱著把它 \"PY好PY滿\" 的決心, 泡杯咖啡, 對著電腦, 在無車無人的夜深時刻, 開始自py一個投資策略的驗證系統.\r\n\r\n1. 何謂股票投資策略, 用 Python 做適合麽 ?\r\n2. 架構簡單的策略驗證系統\r\n3. 與模組們的親密接觸\r\n4. 對投資是否有幫助, Demo 數據會說話 !\r\n\r\n作者: John Hu(胡訓誠), Kilik Kuo(郭彥廷)","category":"OTHER","detailed_description":"*Update* for Stage 2 針對審查議題更詳細說明\r\n\r\nQ1. 為何用'自py' ?  \r\nAns :\r\n前一次投稿的議題是'自幹色彩管理系統', 但不確定'自幹'這個用詞是否會造成少部份人的不適, 想到 py 的發音是'拍', 而程式也都是基於 python 語言, 所以想到用自py代替自幹, 也希望透過'自幹'這個行為, 讓更多人願意捲起袖子來建造輪子給人用, 而非變成只懂用輪子的人, 這不是熟重熟輕的問題, 因為這兩類人在軟體工程中都是必要的, 但我們感覺到這天秤似乎越來越傾斜 >\"< \r\n\r\nQ2. 為什麼用 python ? 為什麼是這個題目 ?\r\nAns : \r\n用 python 當爬蟲一直很熱門, 但爬完資料後的應用有多深有多廣是可以持續探索的, 很多人用來抓取股票資料, 但很少看到公開後續應用的作法, 我們認為有必要當先鋒.\r\n目前商用(銀行交易室/證券代操)工具, 多屬是十多年前的開發設計, 若想更快速地改動參數驗證策略所需要的執行時間是有很大的改善空間的, 透過現在的各種**硬體加速**技術, 所以這個題目與另一個主題 **(Py)OpenCLGA** 再接下來會進行整合, 希望能對現有困境有所突破.\r\n\r\nQ3. 這個策略驗證系統目前能作到什麼 ?\r\nAns :\r\n是一個已經具備 end to end 功能的系統. 也就是開使執行之後, 便可以\r\n1. 自動下載預設目標股票的股價資料,\r\n2. 更新資料庫, 錯誤恢復.\r\n3. 讀取策略資料, 並產生驗證任務, 執行驗證\r\n4. 將驗證結果(適合買進/適合賣出)通知註冊使用者.\r\n5. 等待下一次設定的啟動時間, goto 1.\r\n基本上實作是完整串接的, 而且**幾乎全部都是使用 python 內建的 module 就可以完成**(除了 Beautifsoup 外, 但也可以不用, 只要花點功夫處理html/xml即可), 唯實際運作的驗證/策略設計程式碼我們認為屬於團隊 know-how, 所以並沒有公開完整 repo, 只將各模組層級與部份程式碼公開, 希望讀者能透過這樣子的基礎工具架構屬於自己的流程.\r\n\r\n// ============================================================================================= //\r\n**股票策略之驗證(回測)**\r\n\r\n即利用股價所延伸出來的多種技術指標 (*移動平均 Moving Average, 相對強弱指數 Relative Strength Index, KD 隨機指標 Stochastic oscillator* ... etc), 透過參數組合後得到 \"進/出場條件\", 並利用這個進出場的條件, 針對該公司的過去數年歷史股價進行模擬交易, 最後計算得到投資報酬率, 來衡量一個策略的優劣.\r\n\r\n由於股價的取樣時間可以調控, 短至每五秒做一次股價採樣, 長至以每日開盤收盤最高最低等四種價格作為該日唯一採樣, 股市價格的資料可以相當龐大, 從而造成運算模擬耗時耗力, 於是多數投資者接須使用企業等級軟體來作為投資參考. 而這幾年程式能力的普及與軟體的簡化, 也使得透過程式自動化交易越來越普遍與可行.\r\n\r\n此議程希望, 透過簡要的說明, 將策略研究的大方向搭配最簡單的策略, 來讓聽眾認識如何利用 python 來解決自己的投資選擇問題.\r\n\r\nRef :\r\n1. [證券投資策略與驗證](http://jaylant.pixnet.net/blog/post/23553331-%5Binvest%5D-%E8%AD%89%E5%88%B8%E6%8A%95%E8%B3%87%E7%AD%96%E7%95%A5%E8%88%87%E9%A9%97%E8%AD%89)\r\n2. [投資組合的量化概念](http://www.bituzi.com/2014/09/quantify-trading-diversify.html)","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"https://docs.google.com/presentation/d/1i5PwAHxXZQ2fewn194_gRU3kMG5s-04s1Pil0yJREHQ/edit?usp=sharing","speakers":[{"bio":"https://www.facebook.com/kilik.kuo\r\nhttps://www.linkedin.com/in/kilik-kuo-3923a454/\r\nhttps://github.com/kilikkuo\r\n\r\n想改變世界 ?\r\n先改變自己, 才有機會影響世界.","email":"kilik.kuo@gmail.com","facebook_profile_url":"https://www.facebook.com/kilik.kuo","github_id":"kilikkuo","photo_url":"https://tw.pycon.org/staging/media/avatars/66611363853631555/2016-03-03-kilik.resized.jpg","speaker_name":"Kilik Kuo","twitter_id":""}],"title":"[自py系列2] 投資策略驗證系統"},"322244195077062740":{"abstract":"OpenCLGA 將展現一個高度平行化的基因演算法，它採 open source 的方式經營，讓大家能同時使用多台電腦的 CPU, GPU 同時進行計算演化, 此議程將以典型的 Traveling Salesman Problem 作為解說範例, 利用 Python + OpenCL + Genetic Algorithm 來完成最佳路徑的計算與規劃。 OpenCLGA 是目前唯一一個架構在 Open CL 的基因演算法。而且，它的實作是橫跨 Python 及 Open CL C 兩個語言，以讓使用者能透過 Python 直接進行高度平行化的運算。\r\n\r\n作者：John Hu, Kilik Kuo","category":"SCI","detailed_description":"OpenCLGA 已 [pyopencl] 為基礎，讓[基因演算法]能夠運行在 CPU 或 GPU 的裝置上面。OpenCLGA 除了讓基因演算法運行在 [Open CL] 相容裝置上之外，它還開發了跨裝置的機制，能讓使用者同時運行在 CPU 及 GPU，甚至於讓使用者運行在不同裝置的 CPU 及 GPU 之上。\r\n\r\nOpenCLGA 目前支援的功能有：\r\n* 基因演算法 (genetic algorithm)\r\n* 執行中的暫停、繼續 (pause and resume)\r\n* 執行狀態的暫存、繼續 (memory dump and restore)\r\n* 跨裝置的暫存狀態回復 (restore on different devices)\r\n* 跨裝置的平行運算 (parallel computing on different devices)\r\n\r\n[pyopencl]: https://documen.tician.de/pyopencl/\r\n[基因演算法]: https://en.wikipedia.org/wiki/Genetic_algorithm\r\n[Open CL]: https://www.khronos.org/opencl/","language":"ZHZH","python_level":"EXPERIENCED","recording_policy":true,"slide_link":"https://docs.google.com/presentation/d/1wbsz8esYzv_3NxUR-NIZxBj68-uAWKWKTidypaA3_jk/edit?usp=sharing","speakers":[{"bio":"John Hu 來自於台灣台北，曾經參與手機王及 App 的各種創業活動。創業失敗後，John Hu 加入 Mozilla，隨後則開啟了 open source 的人生，從使用 open source 到 contribute open source projects 都有 John Hu 的足跡。\r\n\r\nhttps://github.com/PyOCL/oclGA\r\nhttps://tw.linkedin.com/in/hsun-cheng-john-hu-8095a062\r\nhttp://john.hu","email":"im@john.hu","facebook_profile_url":"","github_id":"john-hu","photo_url":"https://tw.pycon.org/staging/media/avatars/322238072617959636/2017-03-22-Cat_eye_square-800.png","speaker_name":"John Hu (胡訓誠)","twitter_id":""}],"title":"OpenCLGA - Run Your GA on Top of PyOpenCL"},"322835918492794965":{"abstract":"From Python 3, type hinting has been added.\r\nBy adding this, static type analysis is now available in Python's world.\r\n\r\nIt is possible to use this mechanism with mypy, PyCharm etc.\r\n\r\nIn this session, we will learn about type hinting in Python 3.5 / 3.6.\r\nNext, learn how to use static type analysis using mypy.\r\nthis session,  let you pleased that you can think about writing python code and writing tests.","category":"LIBS","detailed_description":"From Python 3, type hinting was prompted.\r\nThanks to this, static type analysis is now available in Python's world.\r\nIt is possible to use this mechanism with mypy, intellij etc.\r\nIn this session we will learn about type hinting in Python 3.5 / 3.6.\r\nNext, learn how to use static type analysis using mypy.\r\nIt is also possible to use mypy not only in Python 3 but also in Python 2.\r\nIn other words, it is said to demonstrate great power to port Python 2 code to Python 3.\r\nIn fact there are already successes like the following projects.\r\n\r\nhttp://blog.zulip.org/2016/10/13/static-types-in-python-oh-mypy/\r\n\r\nThroughout this session, I am pleased that you can think about writing python code and writing tests.","language":"ENEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"I use Python and Scala/Java at work.","email":"randomstep+pycontw@gmail.com","facebook_profile_url":"","github_id":"masahitojp","speaker_name":"masahito","twitter_id":"masahito"}],"title":"enjoy type hinting and its benefits"},"323492357779488854":{"abstract":"Apache Kafka is considered as a distributed streaming platform to a build real-time data pipelines and streaming apps. You can also take Kafka as commit log service with functions much like a publish/subscribe messaging system, but with better throughput, built-in partitioning, replication, and fault tolerance and runs in production in thousands of companies. Recently, Kafka has been widely applied as one component of SMACK stack because of it's role connected with Apache Hadoop, Apache Storm, and Spark Streaming in the data pipeline.\r\n\r\nIn this talk, I will start with introduce data stream processing and the general concept of Kafka's architecture and components by several use cases. Then, Kafka' API will be introduced by python clients with demo. Finally, the benchmark, comparison and limitation of different python clients will be discussed.\r\n\r\n本演講將透過使用案例介紹Apache Kafka 的基本架構和組成概念，並藉由python client 的套件說明其API的使用，最後比較不同python client的差異和限制。","category":"LIBS","detailed_description":"本演講將會透過python client libary來介紹 Kafka 的功能，並稍加作比較。\r\n\r\n關於Apache Kafka說明: [Apache Kafka](http://https://kafka.apache.org/)\r\n\r\n將介紹的第python client套件：\r\n1. [confluent-kafka-python](http://docs.confluent.io/current/clients/index.html) maintained by Confluent\r\n2. [Kafka-python](http://github.com/dpkp/kafka-python) maintained by Dana Powers\r\n3. [pykafka](https://github.com/Parsely/pykafka) maintained by Parse.ly\r\n\r\nDemo source codes and jupyter notebooks:\r\nhttps://github.com/sucitw/benchmark-python-client-for-kafka","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"A data engineer/scientist, python programmer and computational biologist. Currently working on data related infrastructures in a manufacturer company, especially for data stream processing framework.\r\n\r\nResearch interests: IoT applications, Data analysis. Data visualization. Network theory. Biological pathway. Metabolome.","email":"sucitw@gmail.com","facebook_profile_url":"https://www.facebook.com/sucitw","github_id":"sucitw","photo_url":"https://tw.pycon.org/staging/media/avatars/318091287767023816/2017-02-14-DSC00089_2.jpg","speaker_name":"Shuhsi Lin","twitter_id":""}],"title":"Connect \"K\" of SMACK：pykafka, kafka-python or ?"},"325227434406314071":{"abstract":"Python 有好幾種跟其他程式語言介接方式，本 talk 將會示範如何撰寫 CPython Extension，並簡單介紹 Rust 這個新興的程式語言的特色，最後講解如何使用 Rust 來撰寫並編譯出 CPython Extension。","category":"LIBS","detailed_description":"Rust 是個近期才興起的新語言，\r\n設計目標是想要達到同時兼具效能與安全性，\r\n因此建立了機制在編譯時期進行許多檢查，\r\n想盡早避免錯誤的發生，\r\n並把大部分的檢查成本在編譯出執行檔時優化掉，\r\n來盡量降低對效能的影響。\r\n\r\n本 Talk 將介紹如何將 Rust 和 Python 接起來，\r\n讓 Python 可以利用 Rust 生態圈的套件來輔助效能。\r\n（內容將會著重在利用 rust-cpython 製作 CPython Extension）","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"社會新鮮人，去年剛畢業、當完兵，目前正在新創公司工作，我的朋友大多叫我 \"dv\"，目前活動範圍以桃園、台北居多，熱愛 Open Source :)","email":"wdv4758h@gmail.com","facebook_profile_url":"https://www.facebook.com/wdv4758h","github_id":"wdv4758h","photo_url":"https://tw.pycon.org/staging/media/avatars/51020003641655326/2016-02-11-head.jpg","speaker_name":"許邱翔 (Chiu-Hsiang Hsu) (dv)","twitter_id":"wdv4758h"}],"title":"Python module in Rust"},"326506774788046936":{"abstract":"對於不少爬蟲開發者而言，對於網頁內容解析工具的首選是BeautifulSoup，它除了討論聲量高之外，也有豐富的學習資源可供參考。不過，其實還有很多出色且強悍的工具，pyquery就是其中之一。\r\n\r\npyquery完全依照jQuery的邏輯建構，讓我們可以在Python裡面寫類jQuery的語法，除了可以保有jQuery的精神(Write Less, Do More)，也提高程式碼的可移植性。另外，pyquery的底層是建構在lxml上，所以在分析效能上也是毫不遜色。在css selector上，pyquery提供比BeautifulSoup更高的支援度，對於高度倚賴css path的開發者是相當便利。不同於BeautifulSoup，pyquery提供了url opener，讓開發者可直接訪問網址並生成文件物件模型(DOM)，進而解析內容。\r\n\r\n然而，pyquery的官方文件較為精簡，相關討論亦較少，所以本次分享將由淺入深地探討pyquery。 第一部分，我會介紹pyquery的基本API，並比較pyquery與BeautifulSoup之差異。接下來，我會探討原始碼並剖析pyquery背後運作的邏輯與原理，讓大家了解如何subclass或monkey-patch，例如自訂css selector或新增pyquery的API等。最後，我會提供一些過去開發上的的經驗與延伸，以及pyquery如何與其他套件（如Scrapy, Selenium, Flask）整合應用。","category":"LIBS","detailed_description":"### 爬蟲經驗\r\n我從事爬蟲相關研究超過五年，爬過台灣各大論壇、新聞媒體平台、房屋仲介平台以及其他大大小小的網路平台，也曾透過telnet直接抓取PTT各版資料，亦曾透過proxy或tor爬取各種資料。\r\n在網頁內容解析上，從基本的html、xml、json到其他複雜的格式都有處理的經驗，而最常使用的解析途徑是透過正規表示法，css selector 以及xpath。\r\n\r\n### 動機\r\n我在使用`pyquery`做為主要網頁解析工具已超過兩年，也大量將`pyquery`運用在工作實務上，在使用上累積了許多心得與經驗想跟大家分享，包含容易誤解的部分、已知的問題以及使用上的習慣，並且將會提供實際範例讓聽者了解`pyquery`與`BeautifulSoup`在使用上之不同，希望能透過這次分享，讓更多人了解到`pyquery`的強大與易用性，並且讓更多開發者共同開發且維護該專案，強化`pyquery`的社群。\r\n\r\n### 簡介\r\n`pyquery` 與 `BeautifulSoup` 在底層都支援使用 `lxml` 作為主要解析器，不過在實作上使用的邏輯卻不盡相同。現今，要使用Python作為網頁解析入門，`BeautifulSoup`幾乎是所有開發者的首選，且網路上清一色的教學也都是`BeautifulSoup`的相關資訊。相較之下，`pyquery`的討論度低非常多，但是它是根據jQuery的邏輯去實作，而jQuery在DOM的操作上靈活且易讀，所以使用`pyquery`作為網頁解析器，其實對於開發者來說可能更為友善，甚至對於原本就熟悉jQuery的開發者來說，學習曲線相對平緩很多。對於剛入門的開發者，也可以透過`pyquery`強化對jQuery的認知。\r\n\r\n### 目標\r\n`pyquery` 提供了豐富的API可供使用，且支援大部分jQuery的API，不過官方文件的說明較為精簡，對於一些想入門的朋友可能會感到些許怯步。除此之外，有些API甚至是官方文件沒有提及的，我想藉由這一次PYCON與大家分享與討論。本次分享主要分為三大部分，如下：\r\n\r\n第一個部分，我會對`pyquery`與`BeautifulSoup`的做基本異同比較，並提供實例來凸顯`pyquery`與`BeautifulSoup`在操作同一個DOM上不同的行為。接著會介紹`pyquery`基本的API，並與目前jQuery API的差異做一個簡單的比較，並且將目前所支援的css selector羅列出來。另外，我也會將一些在官方文件未明確記載的部分揭露，讓大家可以更進一步地瞭解可使用的功能。\r\n\r\n第二個部分，我會針對`pyquery`背後設計及邏輯做一個基本介紹，接下來提供一些monkey-patching及subclassing的方式，並以提供實際範例讓大家更能過快速瞭解整個運作的原理。對於想要參與貢獻的開發者，有更明確的方向，以及促進社群的發展。\r\n\r\n第三個部分，我將會分享我在開發上所踩過的坑，以及使用上的經驗分享。另外，我也會分享我在其它套件及框架與`pyquery` 上結合的經驗，可能是直接或間接相關，不過主要是希望能夠給聽者一些腦力激盪，讓聽者對於`pyquery`能有更多的發想及延伸。\r\n\r\n### 相關套件\r\n[pyquery](https://github.com/gawel/pyquery): 本次介紹的主題  \r\n[cssselect](https://github.com/scrapy/cssselect): 用以將css selector 轉譯成xpath的主要套件(Scrapy也有用到此套件)   \r\n[lxml](https://github.com/lxml/lxml): 底層解析DOM所使用的套件  \r\n[Selenium](https://github.com/SeleniumHQ/selenium/tree/master/py): 模擬瀏覽器的自動化測試/爬蟲工具  \r\n[Scrapy](https://github.com/scrapy/scrapy): Python爬蟲框架  \r\n[Flask](https://github.com/pallets/flask): Python輕量級的web framework","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"https://aji.tw/slides/pycon2017","speakers":[{"bio":"劉純睿（阿吉），畢業於台大語言所，有五年以上的Python經驗，專職網路爬蟲、網站前後端開發及部署，目前為全端工程師，同時也是一名業餘魔術師。","email":"amigcamel@gmail.com","facebook_profile_url":"https://www.facebook.com/owen.liu.750","github_id":"amigcamel","photo_url":"https://tw.pycon.org/staging/media/avatars/326501069762855128/2017-03-12-15591671_1253952037981526_5735783382205365296_o.jpg","speaker_name":"劉純睿（阿吉）","twitter_id":""}],"title":"比美麗的湯更美麗：pyquery"},"329473982514331738":{"abstract":"To simplify the work to do, CPython leverages a global big lock to serialize execution of threads.  The big lock results in wasting computing power for lock contention in truly parallel environment and will become the bottleneck when the system getting larger.\r\n\r\nIn the previous work \"Global Interpreter Lock: Episode I - Break the Seal\" in PyCon APAC 2015[1], we focus on how to live along with CPython's GIL well.  In this work, we are going to nullify the effects of GIL by giving each thread a private GIL.\r\n\r\nWithout modifications of the OS kernel and CPython, dynamic linker would be the easiest way to separate memory namespaces within a process.  We will show examples on how to use it and discuss the limitations.","category":"PRAC","detailed_description":"References:\r\n\r\n\\[1]: http://www.slideshare.net/penvirus/global-interpreter-lock-episode-i-break-the-seal","language":"ZHEN","python_level":"EXPERIENCED","recording_policy":true,"slide_link":"","speakers":[{"bio":"Tzung-Bi Shih is a searcher; he searches questions and answers.  He is seeking answers for the question: whether modern operating systems can keep up with multiprocessor.\r\n\r\nTzung-Bi Shih is also a programming enthusiast.  He is wondering how to quantize programs in readability and maintainability degrees.  He thinks someday there will be a new type of programming: real-time programming for executing critical tasks.","email":"penvirus@gmail.com","facebook_profile_url":"","github_id":"","speaker_name":"Tzung-Bi Shih","twitter_id":""}],"title":"Global Interpreter Lock: Episode III - cat < /dev/zero > GIL;"},"332303505006002268":{"abstract":"Serverless software design/architecture is fast becoming the future of cloud computing. Yet, it’s still a confusing concept for a lot of developers [just like Docker. Sorry container enthusiasts].\r\n\r\nThis talk introduces the concept of serverless architecture to the audience, from the ground up. And then runs them through the process of how exactly would the architecture look like, how the deployment happens, and how it boosts developer productivity.\r\n\r\nAll the above would be done by actually running the audience through a live example of spinning up a light-weight serverless app (in Python, obviously) for better understanding of the concept.","category":"ADMIN","detailed_description":"**This is what my team have done while building the serverless architecture:**\r\n\r\nWe wanted to build a serverless data pipeline for coding medical charts using NLP.  However, we didn't want it to be real-time (which is most serverless systems). So, we used a queue and a  monitoring system's (AWS CloudWatch) alarms to pull off the serverless, batch processing pipeline.\r\n\r\nNext, we wanted to make it a serverless, batch, distributed pipeline. So, we made use of Ansible and made the Master-Workers architecture. However, AWS Lambda has a time-limit of 5 minutes. But our entire NLP pipeline flow takes 30 minutes to complete. \r\n\r\nSo, we stumbled upon an idea wherein we create a Master server via Lambda and run Ansible in nohup mode. And then, we learned some very important lessons while doing nohup monitoring.\r\n\r\nNow, we realized that Ansible can terminate the workers once the tasks are completed, but we want to delete the master also. So, we again built the Ansible playbook such that the Master kills itself once the workers are terminated. \r\n\r\nAlso, we built a serverless API for querying the results of the data-pipeline, using AWS Lambda and API Gateway. And, all this have to be built keeping in mind the HIPAA compliance, which means that the data needs to be encrypted both at rest, and in motion.\r\n\r\nSo, along the way of building this complete architecture, we experienced a lot of gotcha moments, failures, huge wins and pitfalls which taught us very important lessons. This talk would very briefly explain those bullet-points after the hands-on demo.\r\n\r\nThis talk would include a quick spin up of a simpler serverless Lambda function in AWS [hands-on], and explain the concept of serverless, and the gotchas and pitfalls to keep in mind while opting for a serverless architecture","language":"ENEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Raj works as a Senior Data Scientist.\r\n\r\nHis job includes building ML algorithms, architecting data pipelines, staring at endless Linux logs and building the DevOps team.\r\n\r\nRaj is the author of the Julia lang cookbook and the DevOps moderator at StackOverflow","email":"jrajrohit33@gmail.com","facebook_profile_url":"https://www.facebook.com/rajrohit.33","github_id":"Dawny33","photo_url":"https://tw.pycon.org/staging/media/avatars/327411226332102873/2017-03-05-DP.jpg","speaker_name":"Jalem Raj Rohit","twitter_id":"data__wizard"}],"title":"Understanding Serverless Architecture"},"334063859654459486":{"abstract":"由於最近面試了許多求職者，發現沒有一個好的程式面試系統，由於公司主要應徵資料分析相關職務，因此我們經常使用 Jupyter 來進行程式面試，但是架設 Jupyter 的部分常常需要由我代勞，於是利用了 Docker 環境切割特性，以及 Slack 對 Work Flow 的支援，整合了 Slack Slash Command 與 Docker，構建以 Jupyter 為主的線上程式面試系統。利用簡單的 `/jupyter` 就可以迅速的開啟 Jupyter 環境，搭配 Docker 容器化能夠更有效的達成隨開隨關的便利性，更進一步的實作了許多延伸功能，像是複製環境、全區管理等等，讓公司的 HR 也能輕鬆的開啟環境處理面試相關事宜，目標是成為一套容易使用的程式面試系統。","category":"PRAC","detailed_description":"### Flow\r\n\r\n[Slack] Slash Command \r\n-> [flask] server \r\n-> handle request with [flask-slack]\r\n-> run [Docker] jupyter container\r\n-> if container is ready, send webhook to [Slack]\r\n-> get the url and the token from the deployed jupyter in [Slack]\r\n\r\n\r\n### Third-party libraries used:\r\n  - [Slack] A cloud-based team collaboration tool.\r\n  - [Docker] An engine that automates the deployment of applications inside software containers.\r\n  - [Flask] A micro web framework written in Python.\r\n  - [docker-py] A Python library for the Docker Engine API.\r\n  - [flask-slack] A Flask extension which makes it easy to interact with Slack slash commands.\r\n\r\n[Slack]: https://slack.com/\r\n[Docker]: https://www.docker.com/\r\n[Flask]: http://flask.pocoo.org/\r\n[docker-py]: https://github.com/docker/docker-py\r\n[flask-slack]: https://github.com/VeryCB/flask-slack","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"哈囉～我是愷愷，目前在 MoBagel 擔任研發工程師，主要負責系統架構部分，未來想要成為一位出色的架構師，喜歡新科技以及動手玩創意，希望能多多認識大家。","email":"kevin830222@gmail.com","facebook_profile_url":"https://www.facebook.com/kkshyu","github_id":"kkshyu","photo_url":"https://tw.pycon.org/staging/media/avatars/334056020131184867/2017-03-08-IMG_0276.JPG","speaker_name":"徐愷","twitter_id":""}],"title":"整合 Slack 與 Docker 搭建 Jupyter 線上程式面試系統"},"335905164227510367":{"abstract":"且聽一位天文黑客分享他自從在紐約跑完天文黑客松回到台灣後，是如何和其他天文黑客一同騎乘蟒蛇冒險(分享他帶領中央天文所Python使用者討論會及高中天文黑客松的經驗)。","category":"EDU","detailed_description":"## 第一關: 參加在紐約舉辦的天文黑客松 Astro Hack Week 2015\r\n達成成就: [Python Wrapper for Hilbert–Huang Transform MATLAB Package](https://github.com/HHTpy/HHTpywrapper) \r\n\r\n## 第二關: 籌組中央天文所Python使用者討論會\r\n\r\n達成成就: [IANCU Python Adventure](https://github.com/Astrohackers-TW/IANCUPythonAdventure) \r\n\r\n## 第三關: 在高中舉辦天文黑客松\r\n\r\n達成成就: [興大附中天文黑客松](https://hackmd.io/s/r1fq3nb-g)\r\n\r\n## 第四關: 在PyCon Taiwan 2017分享前幾關破關心得並尋找潛在的天文黑客\r\n\r\n成就尚未解鎖","language":"ZHZH","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"主線任務：成為中央大學天文研究所畢業的博士。[完成度：95%]\r\n支線任務：成為天文背包黑客，在台灣天文教育與學術界以遊戲化的方式推廣Python、開源精神及黑客文化。[完成度：0.5%]","email":"astrobackhacker@gmail.com","facebook_profile_url":"https://www.facebook.com/elantievs","github_id":"YihaoSu","speaker_name":"蘇羿豪","twitter_id":""}],"title":"天文黑客們的Python大冒險"},"337380532511834208":{"abstract":"Writing concurrent program is hard; maintaining concurrent program even is a nightmare. Actually, a pattern which helps us to write good concurrent code is available, that is, using “channels” to communicate. This talk will share the channel concept with common libraries, like threading and multiprocessing, to make concurrent code elegant.\r\n\r\n撰寫並行程式（concurrent program），例如多執行緒程式等，通常是困難的，而維護並行程式又是一場惡夢。其實有個方法可以寫出好的並行程式，只要使用 channel 做為溝通基礎，就可以寫出好維護的並行程式。這場演講會介紹如何在常見的函數庫，例如 threading、multiprocessing 等，中引入 channel 的概念，讓並行程式變得優雅。","category":"PRAC","detailed_description":"The concept of channel is from the CSP (communicating sequential processes). It's a famous mathematical theory of concurrent systems [1]. The Go (golang) uses it as its fundamental concurrency design [2]. The programmers can design simpler and more maintainable concurrent code with this theory [3].\r\n\r\nAlthough the CSP is not a part of Python, but we still can use common libraries to realize CSP and write better concurrent code. This talk will introduce how to use common Python libraries to realize CSP.\r\n\r\nChannel 這個概念是來自於 CSP（communicating sequential processes），其是一個著名的並行系統（concurrent system）的數學理論 [1]，並獲得 Go（golang）採用作為其並行設計的基礎 [2]，使用此理論可以設計出較為簡單、好維護的並行程式 [3]。\r\n\r\n雖然 Python 並沒有將 CSP 設計成語言的一部份，但我們仍可以利用常見函數庫內的工具實現 CSP，寫出更好維護的並行程式。這場演講會介紹利用 Python 常見函數庫實現 CSP 的方法。\r\n\r\n[1]: https://en.wikipedia.org/wiki/Communicating_sequential_processes\r\n[2]: https://golang.org/doc/effective_go.html#concurrency\r\n[3]: https://golang.org/doc/faq#csp","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Mosky is Python Charmer at Pinkoi, works with colleagues to build the best online marketplace for unique gifts, and has love with Python and open source. more: mosky.tw.\r\n\r\nMosky 是 Pinkoi 的 Python Charmer，工作時和同事一起打造能夠買到獨特禮物的設計品購物平台，也是個熱愛 open source 精神的 Python 工程師。同時有在教授 Python 課程，也擁有數個 Python 專案，例如 ZIPCodeTW、Clime 與 MoSQL。也曾在許多研討會分享過，包含臺灣的 PyCon、COSCUP、TEDxNTUST，以及在日本、新加坡、香港、韓國等地的 PyCon。more: mosky.tw","email":"mosky.tw@gmail.com","facebook_profile_url":"https://www.facebook.com/mosky.liu","github_id":"moskytw","photo_url":"https://tw.pycon.org/staging/media/avatars/58428409247694894/2017-03-12-DSC_0612_square.png","speaker_name":"Mosky Liu","twitter_id":"moskytw"}],"title":"Write Elegant Concurrent Code in Python"},"337602843466793058":{"abstract":"The Internet of Things Concept has become a trending, booming concept in today's time, and almost every tech enthusiast would know it. It is being used all over the place; starting from in homes to being used in big scale appliances such as building the smart city. In this talk, I will be going over how the concept has been applied in Python over time and how it has progressed thus far. I will relate to some projects that implement the IoT concept within Python (including some of my own for reference) to further illustrate how it has become widely applied in many cases, from some simple ones to some also from an advanced level. I will then further talk about how this has been very beneficial from a consumer standpoint, and how the methodology of its usage can be developed with practical uses. After that, I will talk about the future of this concept within Python, and how I see this concept will grow in this platform, and the future developments that can still be done through here.","category":"COM","detailed_description":"When I talk about how the IoT will be implemented into Python, I will be going into three different platforms of its usage in particular: Arduino, Raspberry Pi, and Intel Edison. This will include some of my own experiences in projects involving those platforms as well, while also talking about how other IoT services such as AWS can also connect to this interface. One of the examples of its usage will be through a library made for TCP/IP connection to generate data collected from a device placed in another location. This talk is categorized as a community talk because the talk is also intended to invite the audience to contribute to the Python community through their innovations with IoT as well so that it can bring benefit to many people. All these techniques are to further the knowledge of the Python community in this way.","language":"ENEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Renaldi Gondosubroto is the Founder and CEO of GReS Studio, a company that promotes the concept of the Internet of Things by creating solutions for problems around the community while utilizing the concept. Leading his team of individuals that share the same passion as him with the IoT concept, he leads his company with the vision of being able to have an interconnected world where both individuals and companies can share big data with one another. Starting from just a hobbyist of programming in different languages including Python from a very young age, he eventually decided to venture into working within the IoT technology sector when he created an innovation to help combat a problem all around us which everyone encounters in their daily lives: air pollution. Throughout his time leading his company, Renaldi enjoys sharing his experiences regarding practices and trends that he believes are of importance to develop and navigate through the technologies of today.","email":"renaldigondosubroto@yahoo.com","facebook_profile_url":"","github_id":"","photo_url":"https://tw.pycon.org/staging/media/avatars/337595469377044712/2017-05-06-IMG_5046.JPG","speaker_name":"Renaldi Gondosubroto","twitter_id":""}],"title":"PyOT - The Merge Between Python and the Internet of Things Concept"},"337966254927118436":{"abstract":"透過樹莓派可以控制家裡的電器，但是這樣遠遠不到物聯網的概念，本議程希望透過樹莓派跟IFTTT這個服務，簡單製作自己的物聯網，利用python客製化自己想要的功能","category":"EMBED","detailed_description":"[Raspberry Pi]是一個低價可運行linux的微電腦，跟一般電腦不同的是，提供外部IO控制，透過python，可以控制繼電器開關家電，溫濕度感測器，人體偵測或是一個簡單的按鈕，來做觸發事件，搭配[IFTTT][IFTTT介紹]服務處理IoT整合，連結自己的服務，IFTTT目前已經整合大多主流社群媒體，手機上的應用，到雲端服務，希望透過這介紹可以使用樹莓派跟目前市面上模組化的周邊元件來發想自己的IoT裝置，設計自己的應用。\r\n\r\n[IFTTT介紹]:http://www.techbang.com/posts/10353-network-service-automation-application-ifttt-get-fb-maps-pchome-199-skills\r\n[Raspberry Pi]:https://www.raspberrypi.org/","language":"ZHZH","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"half Producer, half Engineer, half guitarist, half maker","email":"cropse0219@gmail.com","facebook_profile_url":"https://www.facebook.com/Cropse-1507642772825208/?fref=ts","github_id":"Cropse","speaker_name":"Cropse","twitter_id":""}],"title":"自己的IoT自己做- 用樹莓派跟IFTTT客製化你家的物聯網"},"338002558750556261":{"abstract":"我們生活所在的空間充滿了訊號。\r\n\r\n要怎麼理解這些看不到、也聽不到的訊號呢？\r\n\r\nGNU Radio 是知名的(無線)訊號處理開源軟體，也可以使用 Python 來擴展它的處理、分析能力。\r\n\r\n藉由個案分享，來讓社群朋友認識它。","category":"SEC","detailed_description":"打算以 LoRa 或 無線鍵盤 作為個案，來探討一點(非公開的)通訊協定外，以及如何使用 GNU Radio 來觀察、分析、解譯這些訊號。","language":"ZHZH","python_level":"EXPERIENCED","recording_policy":false,"slide_link":"","speakers":[{"bio":"Kuon，現任職於法泥系統。\r\n\r\n關心各種「安全技術」，喜愛研究和解決問題，所有想學習的一切，都圍繞著「安全技術」為中心。\r\n\r\n相信建立好的防守，比攻擊更困難。","email":"Kuon@chroot.org","facebook_profile_url":"","github_id":"","speaker_name":"Kuon","twitter_id":""}],"title":"聽風者 - 使用 GNU Radio 分析風的聲音"},"339401816515018856":{"abstract":"主要是介紹如何使用 Python 簡單的做股票的量化分析，包括資料擷取、選股、策略回測等，會以美股為例來實作。公司資料擷取的部分，會以 Pandas 來做說明，歷史股價的擷取則會使用 Pandas 跟 Quandl 做說明，選股策略的部分會實作波動率選股，進出場策略實作突破策略，回測的部分使用 Sharpe Ratio 並計算 Maximum Drawdown (MDD)。","category":"FIN","detailed_description":"主要是介紹如何使用 Python 簡單的做股票的量化分析。\r\n大綱如下：\r\n1. 簡介\r\n股票投機賺錢是藝術、還是科學？\r\n介紹一下華爾街傳奇 - 海龜交易法則！\r\n2. 投機致富三大要件 (3Ms)\r\n說明投資心理(Mind)、資金控管(Money)、跟系統(Method)的重要性。\r\n3. 系統架構\r\n說明DIY分析系統需要哪幾個部分。主要是抓資料、訂定策略(選股策略、進出場策略)、回測...\r\n4. 使用 Python 抓股市資料\r\n包含：\r\n公司基本資料：使用 Pandas 做說明。\r\n歷史股價資料：使用 Quandl 及 Pandas 來做說明。\r\n5. 選股\r\n使用簡化的波動率選股來做說明，並用 Pandas 實作。\r\n6. 策略\r\n實作簡單的突破策略。\r\n7. 回測\r\n介紹 Sharpe ratio，並用 Python 來實作策略回測。\r\n8. DEMO","language":"ZHZH","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"軟體工程師\r\nKaohsiung.py 義工","email":"victorgau@gmail.com","facebook_profile_url":"","github_id":"victorgau","speaker_name":"Victor Gau","twitter_id":""}],"title":"土炮股票分析系統"},"341985748934721645":{"abstract":"Deep Learning is so popular and in demand these days, and is becoming the state-of-the-art solution of many topics, such as image recognition, game playing, auto driving, etc. \r\n\r\nBesides, we are so lucky that many Deep Learning frameworks and pre-trained models are just  free and easy to use, that we can stand on the shoulders of giants and get great results.\r\n\r\nIn this talk, we are going to introduce how we use TensorFlow and Python to solve image classification problems with more than 80,000 photos a day on PhotoGrid, and avoid inappropriate content online.\r\n\r\nWe are going to have a brief introduction of Deep Learning and Transfer Learning, then share some experiences about the model training and performance tuning, and how we benefited from Deep Learning in practical use.","category":"GRAPH","detailed_description":"1.  Google inception-v3\r\n2.  Transfer Learning\r\n3.  你所使用的 Python tool 是？\r\n4.  PhotoGrid 的相關介紹\r\n等等的連結","language":"ZHEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"仍在軟體界打滾，初探深度學習領域中的一個迷途小書僮。\r\n碰過幾種語言，但仍深深著迷於 Python 的快速簡潔易用。","email":"cutebrady@gmail.com","facebook_profile_url":"https://www.facebook.com/cutebrady","github_id":"cubrady","photo_url":"https://tw.pycon.org/staging/media/avatars/340995884189745396/2017-05-22-10382405_10204065523782249_3925290760397466763_o.jpg","speaker_name":"Brad Chang","twitter_id":""}],"title":"How we use Deep Learning to classify more than 80,000 photos a day on PhotoGrid"},"342865744498786414":{"abstract":"It just so happens python abstracts away the inner workings of import statement beautifully. But are we aware of how python behaves when it encounters an import statement for a module?\r\n\r\nBetter yet what is a module actually?\r\nPackages anybody?\r\nMore than one import style? How to choose between them.\r\nHow would different import styles compare with each other.\r\nAny Best practices when importing modules. What about that __init.py__ you saw the last time you read someone else’s code.\r\nThis talk will walk you through the above and more.","category":"CORE","detailed_description":"","language":"ENEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Uber Geek, Python ♥'r, soccer fanatic, Loves startups, chaos, and hard engineering problems. GSoC 2017 with oVirt. Engineering Intern @ CISCO, formerly @ Wingify(VWO team) (S16).\r\nhttp://tasdikrahman.me/","email":"prodicus@outlook.com","facebook_profile_url":"https://facebook.com/rahmantasdik","github_id":"prodicus","photo_url":"https://tw.pycon.org/staging/media/avatars/342863386947617013/2017-05-08-pycon-2015_800x800_fullquality.jpg","speaker_name":"Tasdik Rahman","twitter_id":"tasdikrahman"}],"title":"Diving deep on how imports work in Python"},"343120065593344111":{"abstract":"Deep learning has already revolutionized machine learning research, but it remains out of reach for many developers. However, tools already exist today that enable leading-edge machine learning for many problem domains.  \r\nIn this talk, we will go on an adventure to build a machine learning model that combines the benefits of linear models with deep neural networks. You will also gain some intuition about what is happening under the hood, and learn how to use this model for your own datasets!\r\nTo accomplish this, we will use TensorFlow, an open-source machine learning library with a full Python interface. It has become the most popular machine learning library on GitHub, and the community around it is growing rapidly.","category":"DATA","detailed_description":"## Description \r\nDeep learning has already revolutionized machine learning research, but it remains out of reach for many developers. However, tools already exist today that enable leading-edge machine learning for many problem domains.  \r\nIn this talk, we will go on an adventure to build a machine learning model that combines the benefits of linear models with deep neural networks. You will also gain some intuition about what is happening under the hood, and learn how to use this model for your own datasets!\r\n\r\n## Third-party libraries used:\r\n  - [TensorFlow] A machine learning library written in C++ with a robust Python API\r\n  - [Pandas] An open source library providing high-performance, easy-to-use data structures and data analysis tools for Python \r\n  - [Jupyter Notebook] An open-source web application that allows you to create and share documents that contain live code, equations, visualizations and explanatory text. \r\n\r\n[TensorFlow]: http://www.tensorflow.org\r\n[Pandas]: http://pandas.pydata.org/\r\n[Jupyter Notebook]: http://jupyter.org/","language":"ENEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Yufeng is a Developer Advocate for the Google Cloud Platform, where he bridges the gap between the developer community and engineering teams.\r\nHe is interested in finding new and interesting applications of machine learning. You can find him on Twitter @YufengG","email":"g.yufeng@gmail.com","facebook_profile_url":"","github_id":"yufengg","photo_url":"https://tw.pycon.org/staging/media/avatars/343116968871592182/2017-03-20-headshot_cropped_2008x2008.jpg","speaker_name":"Yufeng Guo","twitter_id":"YufengG"}],"title":"TensorFlow Wide & Deep: Data Classification the easy way"},"344208185701171314":{"abstract":"Based on our innovative technological capabilities, SK techx is committed to making our clients’ everyday lives happy and convenient with ICT by providing optimized goods and services for each stage of life. \r\nThese services consist of a Web server and a back-end service. Web services use Apache, Nginx, and services made in Java use Tomcat. There are, of course, services built with Python and the Go language.\r\nBack-end services store various types of logs for their purpose.\r\nThere are many kinds of log, and the form is also different. Many developers and Open Sources have tried to interpret and process these formats.\r\nI thought that I would automatically interpret these log formats and detect failures. I think TensorFlow is an alternative. First, I will describe the Fault Detection System architecture using TensorFlow. Second, I will introduce the use of the data generated step by step. Finally, I'll show you how to apply it to a service and how to detect it.","category":"DATA","detailed_description":"### Third-party libraries used:\r\n  - [TensorFlow] An open-source software library for Machine Intelligence\r\n\r\n[TensorFlow]: https://www.tensorflow.org/","language":"ENEN","python_level":"INTERMEDIATE","recording_policy":false,"slide_link":"","speakers":[{"bio":"Since 2016, Eric has been working on the Infra engineering team at SK techx. He is contributing to middleware, ITAM, CMDB projects and is working to ensure that SK Techx's key services operate reliably.","email":"byungwook.ahn@gmail.com","facebook_profile_url":"","github_id":"bwahn","photo_url":"https://tw.pycon.org/staging/media/avatars/344201146652426489/2017-03-22-Eric-cartoo-L2.jpg","speaker_name":"Eric Byungwook Ahn","twitter_id":""}],"title":"Tensorflow & Python: Fault Detection System"},"345377900414894195":{"abstract":"LHC實驗是現今粒子物理實驗的最先端，2012年所發現的希格斯粒子更是物理界的一大盛事。繼Atlas實驗在Kaggle公開Higgs挑戰之後，另一個LHC的LHCb實驗也將實驗數據搬上了Kaggle平台。本講題將簡介背後的實驗，並使用LHCb的數據以SciKit-Learn進行多維度數據分析與使用MatPlotLib視覺化。","category":"DATA","detailed_description":"位於瑞法邊境的歐洲粒子研究機構CERN，除了是WWW的發源地，也是現今粒子物理研究的前沿，LHC實驗的所在地。隨著2012年希格司粒子的發現，成就了2013年的諾貝爾物理學獎，其背後支撐的其實是龐大的巨量數據處理與分析。繼Atlas實驗在Kaggle平台以模擬數據公開徵求分析高手來挑戰外，LHCb實驗也在先前提供了一部份的真實實驗數據，讓非相關研究人員也可以嘗試尋找可能的新物理。最新的熱門話題，更是數週前LHCb實驗發表了五個前所未見的新複合粒子態。\r\n\r\n本講題以LHCb的Kaggle挑戰所提供的實驗數據，使用python的sk-learn套件中幾個常用的機器學習演算法，來進行多維特徵的資料分析。同時探討在實際從事分析時，所需要注意的一些要點。並且示範使用matplotlib來將數據中的一些特徵，以及機器學習的輸出，進行視覺化的過程。","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"從事高能物理研究的自由軟體愛好者\r\nHigh energy physics researcher, OSS lover","email":"yuanchao@gmail.com","facebook_profile_url":"https://www.facebook.com/yuanchao","github_id":"yuanchao","photo_url":"https://tw.pycon.org/staging/media/avatars/59221213427269684/2017-05-04-12140805_10153100083691471_3066441214696763830_n-.jpg","speaker_name":"趙元 (Yuan CHAO)","twitter_id":"yuanchao"}],"title":"淺嚐LHCb數據分析的滋味 Play around the LHCb Data on Kaggle with SK-Learn and MatPlotLib"},"345417142851600500":{"abstract":"應用遺傳演算法特性最佳化股市投術分析參數，利用高頻交易的tick股票資料，以不同的均線(5、10、20)，和幾種技術指標，找出每檔股票的均線與技術指標參數的最佳化。並搜尋出資金配置的最佳停損、停利點。","category":"FIN","detailed_description":"資料來源\r\n資料: 台灣上市上櫃股票846\r\n週期: Tick\r\n時間: 20160101~20161230\r\n內容: 股票代號、交易時間、價格、成交量\r\n\r\n工具\r\n1.自動載入Data : 永豐銀行 API\r\n2.資料庫 : MySQL\r\n3.遺傳基因演算法分析 : Python 套件deap 1.0.2進行分析\r\n4.介面 : 用Django_Web呈現\r\n\r\n適應函數: 報酬率/最大虧損\r\n編碼: 實數編碼\r\n\r\n回測KPI\r\n交易次數 最大報酬 最小報酬 平均報酬 連續虧損次數 連續虧損金額 獲利因子 獲利金額 賺賠比 期望值 年化報酬率 勝率 ...","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"高雄應用科技大學教授","email":"letylin@gmail.com","facebook_profile_url":"","github_id":"","speaker_name":"林萍珍","twitter_id":""}],"title":"遺傳演算法最佳化高頻交易策略"},"346169298194006133":{"abstract":"The Python package Skyfield computes positions for the stars, planets, and satellites in orbit around the Earth using the same underlying code and data as astronomers and rocket scientists. See http://rhodesmill.org/skyfield/ It has been lovingly build by the maintainer of the earlier PyEphem, and you can learn about the philosophy of the package and it's elegant use of python on it's website, and in this PyCon Canada 2013 presentation  https://youtu.be/FVEEndIwOSA\r\n\r\nI'll take you through the methods, and go into the thought behind them - how to make Skyfield and it's methods as absolutely easy and intuitive to use, and yet provide you with rock-solid math and physics. The only dependency is NumPy, which is pretty much a given for any scientific package.\r\n\r\nWe'll build the solar system, watch the sun get pushed around by Jupiter, Saturn and Uranus, simulate a solar eclipse, and predict when and where to stand to see the full Moon hovering above Taipei 101.","category":"SCI","detailed_description":"Detailed description","language":"ENEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"[0, None, False]","email":"david.mikolas1@gmail.com","facebook_profile_url":"","github_id":"","speaker_name":"David Mikolas","twitter_id":""}],"title":"Skyfield - elegant Astronomy in elegant Python. It's easy!"},"346944817386750070":{"abstract":"The process of submitting CPython patch has changed in 2017 Feb., which had changed to use GitHub with bpo (bugs.python.org), not Mercurial anymore.\r\n\r\nThis talk will give you the basic knowledge of reporting bugs to bpo, submitting CPython patch, including how to retrieve the CPython source code, where the bugs listed, how to fix it, and how to submit the patch / contribute to CPython.\r\n\r\nAlso, please kindly know that you **DON'T** need to have any advanced C knowledge (even if you're not familiar with C!) and still can join to contribute CPython, e.g. comment on doc patches, write python-only patches...etc. The fact is, CPython codebase is consist of 57.5% Python code and 39.8% C code!\r\n\r\nIf you are still interested in this topic and want to contribute with CPython community, welcome to join this talk.","category":"CORE","detailed_description":"Reference\r\n------\r\n* [python-committers] We are now live on GitHub!: https://mail.python.org/pipermail/python-committers/2017-February/004220.html\r\n* cpython-devguide: http://cpython-devguide.readthedocs.io/\r\n* fixed issue:\r\n    * http://bugs.python.org/issue29634\r\n    * http://bugs.python.org/issue29890","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Greeting, I'm Louie Lu, from Taiwan.\r\n\r\nLouie Lu (Shao-Jung Lu) is a Software Engineer Intern at KKBOX, and was a Software Engineer at HopeBay Tech, where he does automation test for UI and API, with 3rd-party API development.\r\n\r\nHe has the experiment and interesting in IoT kernel development and system programmings, such as F9 microkernel and BitSec Hypervisor.\r\n\r\nAnd he is now trying to understand the internals of CPython, to see how CPython magically bring us Python to the world.\r\n\r\n\r\nYou can find me at: https://louie.lu\r\nAlso, the bpo-mergerate: https://bpo-mergerate.louie.lu","email":"me@louie.lu","facebook_profile_url":"https://fb.me/louie.lu.180","github_id":"mlouielu","photo_url":"https://tw.pycon.org/staging/media/avatars/318097505713651913/2017-05-01-15317889_1412875262064393_2685786703496506831_n.jpg","speaker_name":"Louie Lu","twitter_id":""}],"title":"Submit your first CPython patch (and don't worry about C)"},"347337408099909751":{"abstract":"Statistical models play an important role in disease prediction. Time serialized incidence data can be used to predict the future occurrence of disease events. In the case of modeling the Taiwan's dengue outbreak, 2015, we should discuss how to refine/manipulate the data to be functioned and provide an opportunity to develop some stochastic models for predictive power.","category":"DATA","detailed_description":"Since 2015, dengue out-break damaged Tainan area and strongly affected people's life very much. This brings the experience that the implict threaten of dieases could be not blocked due to the space limit as usual and  it is important to moniter epidemiological inference and make right public health planning just in time. \r\n\r\nIn this talk, we will propose a detailed procedure of building up monitoring and forcast system, including \r\n\r\n1. Data clean/manipulation for use,\r\n- Infomation visualisation, statistical results and geolocation related\r\n- setup the monitoring system by estimation of the attack ratio of an epidemic, $R_t$.\r\n- building stochastic models for the prediction of infectious disease outbreaks. \r\n\r\n**Note**. cross-comparison with other third-party module would be mentioned,  \"\"\"fbprophet\"\"\" for instance.\r\n\r\n\r\n\r\n\r\nPython and required modules include:\r\n\r\nnumpy, scipy, matplotlib, pandas, gmplot, gqrid, JSAnimation, seaborn, statmodels, arch, ipywidgets-6.0.0\r\n\r\nwhich are selected under the concern: easy-to-installation.\r\n\r\nCase studies will run on Python Jupyter notebook environment (Python 3.6).","language":"ZHEN","python_level":"EXPERIENCED","recording_policy":false,"slide_link":"http://GitHub.com/cchuang2009","speakers":[{"bio":"A python user\r\n\r\ncchuang@mail.cgu.edu.tw\r\nChang-Gung University, Center of Education","email":"cchuang2009@gmail.com","facebook_profile_url":"","github_id":"cchuang2009","speaker_name":"Chu-Ching Huang","twitter_id":""},{"bio":"Undergraduate in NCTU.\r\nMajoring in financing.","email":"drhuang0922@gmail.com","facebook_profile_url":"","github_id":"","speaker_name":"黃多睿","twitter_id":""}],"title":"Stochastic Prediction Model,  Case of the Dengue outbreak at Tainan, 2015"},"347449930429759608":{"abstract":"PDF 的存在是為了跨平台文件呈現以及列印的方便，利用一個統一的 PDF 檔案規範，藉此使文件不論在哪裡看起來都一模一樣。由於 PDF 的這般特性以及它的格式設計，一般來說我們不會寫程式從 PDF 中抓取資料，但有時候不得已必須從中抓取一些資訊，這時就必須使用一些工具來剖析 PDF。這個演講中將會介紹 poppler 以及 PDFMiner 等工具，用千百種方法來面對 PDF。\r\n\r\n註：本演講和圖像辨識無關，而是注重於直接被儲存在 PDF 裡的內容，如文字、圖片、向量圖形等等","category":"LIBS","detailed_description":"使用到的工具：\r\n- poppler: https://github.com/danigm/poppler\r\n    - pdftocairo: 將 PDF 轉為 SVG\r\n    - pdftohtml: 將 PDF 轉為 XML（不是轉為 html）\r\n- svgpathtools: https://github.com/mathandy/svgpathtools\r\n- PDFMiner: https://github.com/euske/pdfminer\r\n    - with six: https://github.com/pdfminer/pdfminer.six\r\n\r\n有時間的話會稍微講一個實作範例，是將一個有很多頁的 PDF 的內容、圖片及表格剖析出來並產生出結構化的 HTML","language":"ZHEN","python_level":"EXPERIENCED","recording_policy":true,"slide_link":"","speakers":[{"bio":"高一的在家自學小帥哥","email":"adrianliaw2000@gmail.com","facebook_profile_url":"http://fb.me/adrianliaw2000","github_id":"adrianliaw","photo_url":"https://tw.pycon.org/staging/media/avatars/27439618869690374/2016-01-09-adrian.jpg","speaker_name":"廖偉涵 Adrian Liaw","twitter_id":"adrianliaw2000"}],"title":"千百種面對 PDF 的方法"},"347535452179267705":{"abstract":"如果我們想教會機器人爬樓梯，能不能直接走一次給它看\r\n然後機器人觀察我們的動作，自己就學會這項技能 ?\r\n\r\n這項情境可以透過兩項技術來達成：\r\n1. 增強學習 2. 逆增強學習\r\n\r\n本次分享將介紹它們的概念，並呈現 python 實作成果","category":"SCI","detailed_description":"本次介紹的主題在機器學習領域稱為模仿學習(imitation learning)\r\n透過逆增強學習從人類的行為，學習出目標函數，再透過增強學習，讓AI自己找出最佳的動作策略\r\n由於深度學習的活躍，近期也出現許多互相融合的有趣成果\r\n本次分享內容將介紹如何結合深度學習與模仿學習\r\n並透過物理模擬引擎MuJoCo呈現機器人的學習成果，還有講者在理解與實作上的歷程心得","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"MLDM Monday與 Kaohsiung Python社群的 Co-organizer, 同時也是電子商務公司的研發工程師，熱衷於研究機器學習相關技術，喜歡分享相關技術，並應用在實務工作上。","email":"sk413025@gmail.com","facebook_profile_url":"","github_id":"","speaker_name":"Jiawei Chen","twitter_id":""}],"title":"模仿遊戲: AI如何與人類互動獲得新技能"},"347559650142453882":{"abstract":"兩年前我在 PyCon 分享了我的個人專案 PyCuber，一個 Python 的魔術方塊套件。時隔一年多的某個時候，覺得程式碼越看越不順眼，於是就決定重寫它，make PyCuber great again！\r\n\r\n在本次的演講中，會講我改寫 PyCuber 的心路歷程、打掉重練的動機及內容。在新版本中，最大的改變即是改用 NumPy 來模擬魔術方塊，藉此提高效率。在魔術方塊式子的處理部分，也利用了一些 Python 內建好用的工具來簡化。","category":"OTHER","detailed_description":"本次演講的重點比較多會放在重構的心路歷程，技術上則針對 PyCuber 在魔術方塊本身的模型處理，對於解開魔術方塊的部分則不會著墨太多。","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"高一的在家自學小帥哥","email":"adrianliaw2000@gmail.com","facebook_profile_url":"http://fb.me/adrianliaw2000","github_id":"adrianliaw","photo_url":"https://tw.pycon.org/staging/media/avatars/27439618869690374/2016-01-09-adrian.jpg","speaker_name":"廖偉涵 Adrian Liaw","twitter_id":"adrianliaw2000"}],"title":"Make PyCuber Great Again"},"347639725042958459":{"abstract":"在 PyConTW 2016 聆聽了 \"多語系 Sphinx 與 Python 官方文件中文化\" 起了想翻譯文件念頭。希望透過簡單方式讓大家可以快速的、協同的一起把英文文件翻譯並且呈現。\r\n臺灣的繁體中文文件一直以來都不豐沛。也許是工程師已經習慣看英文文件，但英文畢竟不是我們的 native 語言，有時候因為英文造成學期曲線增高實在很困擾。因此萌生想要開始翻譯文件想法。\r\n多國語系在過去不管是本機或是網頁就已經是一個標準，但最大的問題是在於翻譯往往只能是一小群人在做，而這一小群人或許也並非翻譯專業，而翻譯專業的人卻因為不是很懂程式語言而造成隔閡。\r\n因此本文希望提供一個分享，能夠解決進行翻譯時的技術門檻，讓大家都可以快快樂樂一起翻譯文章！","category":"COM","detailed_description":"本此用來 Demo 的專案是 **Django Channels**，它是一個將傳統 Django 視圖以請求與回應方式（requests and response）方式改以 websockets 或是 HTTP2 方式可以同時間處理更多的 HTTP 請求(requests) 專案。\r\n\r\nDjango Channels 的英文文件(https://channels.readthedocs.io/en/stable/) 很仔細的說明這個架構並且如何透過 Django 實現。因此作為一個翻譯文件是一個很合適範例。\r\n\r\n因為這是一個以社群為基礎技術為輔的演講。但在這我們會更側重如何讓有心人可以簡單的建立一個翻譯環境，而且後者也可以繼續維護下去。藉用了許多前人演講的工具與經驗來加快這件事情。\r\n\r\n本演講將會分享如何透過 Sphinx 建立一個多國語系文件檔專案，利用 transifex 網站建立翻譯平台，並將成果透過 readthedocs(https://readthedocs.org/) 文件檔網站並結合 Github 呈現，其中會有解決 readthedocs 在建構中文版頁面時在 Sphinx 的 config.py 上有趣的技術分享。\r\n\r\n最後分享我們如何在 3/12 sprint (衝刺開發) 一天的時間內將這份文件幾乎翻譯完成。","language":"ZHZH","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Yi-Chieh Chen(Jason) earned his master degree at the graduate school of Institute of Healthcare Information Management in CCU. He has served a senior software R & D engineer for 5 years at Pegatron. He is also the Program Chair of PyCon Taiwan 2017.\r\n\r\nHe love Python's clean, and had a sense of achievement when he finished the complex work in the clean code. Yi-Chieh like using Django framework to make system for other engineers to get done job more easily and also like to integration kind of different tools together. Recent now he also interested in research Machine Learning and Deep Learning.\r\n\r\nYi-Chieh Chen's blog is https://chairco.github.io, although it's not updated frequently, he will like to share on here if he has anything new find out","email":"chairco@gmail.com","facebook_profile_url":"https://www.facebook.com/chairco","github_id":"chairco","photo_url":"https://tw.pycon.org/staging/media/avatars/75710217181986912/2017-05-05-P1010496.jpg","speaker_name":"Yi-Chieh Chen","twitter_id":"ChaircoChen"}],"title":"Translating Django Channels Document together"},"347798441977446527":{"abstract":"共識機制是區塊鏈運作原理的核心。自比特幣以來，大多區塊鏈使用工作量證明（Proof of Work, PoW）作為共識機制，運作的原理會消耗大量水電等天然資源。目前 Ethereum 生態系的開發者正在開發權益證明（Proof of Stake, PoS）的演算法，可避免 PoW 不環保的缺點並有額外安全性好處。我們將簡介官方的幾個 Python 實作，以利有興趣的開發者參與。","category":"FIN","detailed_description":"- https://www.youtube.com/watch?v=uFBu2P1mwFU\r\n- https://en.wikipedia.org/wiki/Proof-of-stake\r\n- https://medium.com/@VitalikButerin/a-proof-of-stake-design-philosophy-506585978d51#.iamxg5ywe\r\n- https://github.com/ethereum/simplecasper\r\n- https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Taipei Ethereum Meetup 共同組織者。平常工作做資料分析。","email":"chihchengliang@gmail.com","facebook_profile_url":"","github_id":"ChihChengLiang","speaker_name":"梁智程","twitter_id":""}],"title":"PoS: 環保又安全的區塊鏈共識機制"},"347808212868661376":{"abstract":"The PyPy project provides a practical way for building diverse language runtime in Python.\r\nIt achieves this goal without giving up on the efficiency of the compiled virtual machines, thereby keeping it within reach of further reasonable optimization work. In this talk, we would traverse overall design perspectives of PyPy implementation along with the construction of simple domain-specific language (DSL) runtimes on top of PyPy.","category":"INTNL","detailed_description":"","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"一個成大資工系的菜鳥，什麼都不會的在努力研讀 Compiler 中","email":"kisekinoashita@gmail.com","facebook_profile_url":"https://www.facebook.com/TsundereC","github_id":"TsundereChen","photo_url":"https://tw.pycon.org/staging/media/avatars/347647649920319739/2017-05-01-IMG_0009.JPG","speaker_name":"TsundereChen","twitter_id":""},{"bio":"Jim is known as “jserv” in open source world. After involved in Android Open Source Project, Jim specializes in embedded, real-time and virtualization to bring Linux based robots to fit for the industrial requirements. He is the co-founder of LXDE project, a lightweight desktop environment widely used in embedded devices such as Raspberry Pi.","email":"jserv.tw@gmail.com","facebook_profile_url":"","github_id":"jserv","speaker_name":"Jim Huang","twitter_id":"jserv"}],"title":"PyPy's approach to construct domain-specific language runtime"},"347901318163071105":{"abstract":"In most large companies, data transformation and analysis are done with SQL. However, most SQL environments don't possess a rich ecosystem like Python and using SQL for complex data aggregation complicates the SQL code and make it not maintainable. By exploiting the power of Pandas and Python, data transformation and analysis can become simple and wonderful jobs.\r\n\r\nThis talk mainly focuses on performing data transformation and analysis with Pandas. It will start by introducing basic pandas components and how to work with text data. After that, this talk will focuses on how to use split-apply-combine strategy to transform and aggregate data. The final part of this talk will be demo and Q&A.","category":"LIBS","detailed_description":"目前大部分台灣公司的資料分析，仍然十分仰賴於使用 SQL ，但是將複雜的資料轉置流程全部寫在 SQL code 裡面會讓 SQL code 變得很長，而且由於 SQL 本身不如 Python 一般有彈性，過長的 SQL code 會讓程式碼變得難以理解與維護，因此最好是將複雜的資料轉置流程放在 Python code 裡面，而讓 SQL code 只負責查詢各種轉置前的資料庫資料即可。\r\n\r\n本演說將會將從介紹基本會用到的元件如 Series、DataFrame開始，然後進入如何利用 Pandas 裡面的 merge, groupby, agg, transform 來做資料轉置，並解釋這些 Pandas 方法的特性，最後利用 Dataset 來做 demo，讓聽眾了解如何利用 Pandas 來做資料的轉置。","language":"ENEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Graduated from physics department, former engineer of  INNOLUX corporation and currently working for semiconductor manufacturing.\r\nI have numerical computing experiences with C++, Java and Python. Currently working on data transformation using SQL and Pandas and on data visualization using Tableau and Django.\r\n\r\nMy page: https://zhnotes.wordpress.com/aboutme/","email":"icbm0926@gmail.com","facebook_profile_url":"https://www.facebook.com/icbm0926","github_id":"xingularity","photo_url":"https://tw.pycon.org/staging/media/avatars/42238169927647256/2016-02-02-me2.png","speaker_name":"Zong-han, Xie","twitter_id":"dapang"}],"title":"Practical Data Transformation and Analysis with Pandas"},"348099433595928706":{"abstract":"This session showcases work on generic object detection using deep learning. We use the state-of-the-art object detector in the Microsoft Cognitive Toolkit (CNTK) called Fast R-CNN based on Python. Fast R-CNN is based on a Deep Neural Network which was pre-trained on millions of images.","category":"DATA","detailed_description":"The objective of the talk is to describe the DNN technology and show the full object detection pipeline encompassing image annotation, model training, evaluation. \r\nFast R-CNN is a fast framework for object detection with deep ConvNets.Fast R-CNN was initially described in an [arXiv tech report](http://arxiv.org/abs/1504.08083) and later published at ICCV 2015.\r\nMicrosoft Cognitive Toolkit (CNTK), an MIT Licensed open source deep-learning toolkitthat describes neural networks as a series of computational steps via a directed graph. It supports both Linux and Windows. Based on researchers at HKBU, CNTK’s LSTM performance is 5-10x faster than the other toolkits. \r\nThe session introduct how to combine the state of art algoritm and toolkit to do image  Object Detection.","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Been a Java Developers for 3 years. \r\nWork as a Microsoft consults for 5 years and work as a Technical Evangelist for the other 5 years.","email":"herman.wu@live.com","facebook_profile_url":"https://www.facebook.com/herman.wu.716","github_id":"Herman-Wu","speaker_name":"Herman Wu","twitter_id":"hermanwu01"}],"title":"Deep Learning Based Object Detection (Fast R-CNN) in the Microsoft Cognitive Toolkit"},"348189895673512067":{"abstract":"In this talk, I will present how to recognise speakers and their speaking sessions in a filmed meeting using deep learning (deep convolutional neural networks; CNN). This project uses the \"transfer learning\" approach. Pre-trained CNN models, such as the VGG face descriptor used in this project, enable everyone to analyse photos or videos without training his own CNN. I will explain how to use a pre-trained model to extract face features and use clustering methods to identify different people without knowing their identity in advance. Results of a real case will be shown. Application and restriction of this method will be discussed.","category":"DATA","detailed_description":"Project page and Github repository:\r\n* Website: http://www.ccfux.url.tw/UVA.html\r\n* Github: https://github.com/chiachun/UVA\r\n\r\n</br>\r\nPackages used in this project: \r\n- opencv for video reading and image pre-processing http://opencv.org\r\n- caffe for running CNN models http://caffe.berkeleyvision.org\r\n- pre-trained VGG face desciptor http://www.robots.ox.ac.uk/~vgg/research/very_deep/\r\n- sklearn for clustering http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html","language":"ENEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Chia-Chun is a scientist and pianist. She is interested in various areas including astrophysics, data science, software engineering, and music. She currently works as an algorithm engineer at OnePlus.","email":"chiachun.sh.lu@gmail.com","facebook_profile_url":"","github_id":"chiachun","speaker_name":"Chia-Chun Lu","twitter_id":""}],"title":"Recognising people in videos using a pre-trained deep learning model"},"348202550282944644":{"abstract":"Content: \r\n1. Concept of reuse \"sandwich\"\r\n2. decorator\r\n    2.1 Quick introduction\r\n    2.2 How decorator save you from repeat in yourself\r\n    2.3 Example\r\n3. with statement \r\n    3.1 Quick introduction\r\n    3.2 How with statement save you from repeat in yourself\r\n    3.3 Example","category":"PRAC","detailed_description":"Python use 'def' to make a subroutine, which could separate the work, make the code more clear and most important: we could reuse them.\r\n\r\nPython Decorator and \"with\" statement could also do the same thing but in another way. Just like the  bread of the sandwich which wrap the stuffing. Could we reuse this \"sandwich bread\" to make our code clear and easier???\r\n\r\nThe goal is to let target audiences has a new angle of view to these two python basic syntax.  \r\nQuick introduction on basic syntax will be included.","language":"ZHEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Use python from 2005.\r\nIC designer who want to benefit the world.","email":"syhsiao0917@gmail.com","facebook_profile_url":"https://www.facebook.com/syhsiao0917","github_id":"","speaker_name":"蕭聖穎 (Stanley Hsiao)","twitter_id":""}],"title":"Don't reinvent Sandwich. (Decorator and with statement)"},"348362827431411846":{"abstract":"* 會說明 Python 不適合做數值運算的部分\r\n* 會講解 NumPy 的強項以及特色 \r\n* 解析 NumPy Array 各種豐富的取值方式 \r\n* 提醒注意那些跟 Python list 寫法相同，行為卻不同的程式碼\r\n* 在實戰時，是如何使用 Numpy 那些奇特的寫法\r\n* 展示各式數值運算套件如何使用 Numpy","category":"LIBS","detailed_description":"NumPy 是科學計算領域的基本工具之一，對第一次使用 NumPy 的人，可能會被各種神奇的使用方式迷惑。 這邊很高興為大家入門 NumPy，希望可以幫助大家上手。\r\n\r\n這裡會整合筆者工作上的使用經驗，再加上從各方文件以及書本整理出來的觀念，來幫助大家熟悉 numpy.","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"小小工程師，喜歡寫程式。喜歡寫測試。 目前服務於集雅科技","email":"tim.yellow@gmail.com","facebook_profile_url":"https://www.facebook.com/wenchang.hsu","github_id":"timtan","photo_url":"https://tw.pycon.org/staging/media/avatars/69807398730072146/2017-05-10-IMG_0233.jpg","speaker_name":"Tim Hsu","twitter_id":""}],"title":"Numpy for dummy"},"348363376935567495":{"abstract":"想像我們飛過臺北的天空，欣賞梵谷和大師們筆下的臺北！\r\n\r\nDeep Learning 讓這件事變得可能！\r\n這次短講，我們想和大家分享深度學習如何讓電腦學會大師的筆觸和風格(Convolutional Neural Networks, CNN)。接著我們分享從2015年至今，四個重要演算法的優缺點。最後，我們想分享我們結合在地特色實作的成果。\r\n\r\n關於背景知識，並不設限，我們會從簡單的概念開始談起，如果有基本的數學認識尤佳。","category":"GRAPH","detailed_description":"幾篇閱讀與實作的文章：\r\n\r\n1.Leon A. Gatys, Alexander S. Ecker, Matthias Bethge. A Neural Algorithm of Artistic Style. (2015). URL: https://arxiv.org/abs/1508.06576.\r\n2.Justin Johnson, Alexandre Alahi, Li Fei-Fei. Perceptual Losses for Real-Time Style Transfer and Super-Resolution. (2016). URL: https://arxiv.org/abs/1603.08155.\r\n3.Vincent Dumoulin, Jonathon Shlens, Manjunath Kudlur. A Learned Representation For Artistic Style. (2017). URL: https://arxiv.org/abs/1610.07629.\r\n4.Xun Huang, Serge Belongie. Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization. (2017). URL: https://arxiv.org/abs/1703.06868\r\n(上述四篇文章含括Style Transfer領域在近兩年來的發展，從一次只能轉換一種畫風，演變到近乎即時轉換任何畫風)","language":"ZHEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"A student in National Taiwan University. I am interested in  Deep Learning and its application.","email":"peteryuhsin@gmail.com","facebook_profile_url":"https://www.facebook.com/pierreysyeh","github_id":"","photo_url":"https://tw.pycon.org/staging/media/avatars/348287694914191618/2017-03-27-me.jpg","speaker_name":"Peter Yeh","twitter_id":""}],"title":"Flying over Taipei with Van Gogh and His Friends"},"348376501365768328":{"abstract":"Microservices已經是門顯學，就算沒有實作過相信大家也都聽過．\r\n在這個演講中，將會介紹群攜科技五位後端工程師如何共同協作一個\r\n手遊直播、螢幕分享、錄影截圖、視訊群聊的社群平台．\r\n\r\n雖然我們不是Microservices專家，但我們希望透過個案分享，\r\n讓各位在開發及測試Microservices有多一些思考選擇．","category":"PRAC","detailed_description":"","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"現任：群攜科技軟體工程總監 Sr. Director@Soocii\r\n經歷：\r\n趨勢科技資深軟體研發經理\r\n凌群電腦軟體研發工程師\r\n曾於國內臺灣大學、遠東科技大學、慈濟大學演講或授課\r\n\r\n產品：\r\nSoocii - 手遊直播、螢幕分享、錄影截圖、視訊群聊\r\n消費者(Pccillin)資安產品\r\n中小企業(Worry-Free Business Security)資安產品\r\n資料庫DBMaker","email":"jonas.cheng@soocii.me","facebook_profile_url":"https://www.facebook.com/jonas.cheng.3","github_id":"jonascheng","photo_url":"https://tw.pycon.org/staging/media/avatars/348347051991367940/2017-03-27-Portrait_800_800.jpeg","speaker_name":"Jonas Cheng","twitter_id":""}],"title":"Building Microservices in Python 個案分享"},"348467557675565193":{"abstract":"在物聯網(IoT)的環境下會根據不同需求使用不同的無線通訊方式，而 LoRa 的特色在於長距離與低功耗。但目前 LoRa 並不像大多數成熟的通訊協定可以隨插即用，它的優點在於所有東西都可以自己做，缺點也在於所有東西都要自己做。\r\n我們將分享 LoRa 原理與實做經驗，如何用 Raspberry Pi + LoRa 模組 + Python 打造一個微型閘道器(nano gateway)，包括在難以用軟體除錯與優化的情形下，如何使用 Python 自製一個頻譜分析儀來分析訊號。讓有興趣弄髒手的人能 happy hacking。","category":"EMBED","detailed_description":"","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"https://www.slideshare.net/raspberrypi-tw/building-a-raspberry-pi-lora-nano-gateway","speakers":[{"bio":"Hi, I'm sosorry.","email":"sorry702@gmail.com","facebook_profile_url":"","github_id":"","speaker_name":"sosorry","twitter_id":""}],"title":"Learn LoRa with Python"},"348539121326620812":{"abstract":"Instead of common Python + Travis CI tutorial, fun, real coding practice, and benefits of testing will be focused in this talk by discomposed actions in different aspects and tools surround related topics, including continuous integration (CI), debugging, packaging, and coding. Popular tools and services, for example, Jenkins, py.test, Travis CI, and Codecov will be looked at.","category":"PRAC","detailed_description":"### Objective\r\n\r\nI want to paint the blueprint and show real use cases to audience for following perspectives:\r\n\r\n- How fun can testing be\r\n- The devil detail of \"Hard to test\"\r\n- How to bootstrap your tests\r\n- Looking around Jenkins, buildbot, py.test, and default unitest module of Python\r\n- When it's good to go with test-driven development\r\n- How to decide whether it's good enough on code coverage\r\n- Python package in action with TravisCI and Codecov\r\n- How to speed coding and get quality by writing tests\r\n- How to let testing make life easier instead of harder","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"Keith is the founder and co-organizer of Taipei.py, largest Python user group in Taiwan, a Senior Engineer at iCHEF, and was Chairperson of PyCon APAC 2015. He enjoys the quest of coding in software architecture and explores programming paradigms. His work mostly focuses on web/backend/cloud services since 2006, and he hands on tools of virtualization on hypervisors in 2016. In his spare time, he enjoys skateboarding, coffeeachemy, learning Japanese, and attempting to go hiking again.\r\n\r\nMore: https://yang.keitheis.org/","email":"yang+pycontw@keitheis.org","facebook_profile_url":"","github_id":"keitheis","photo_url":"https://tw.pycon.org/staging/media/avatars/67617346293858373/2016-03-05-PlayerExpo.jpg","speaker_name":"Keith Yang","twitter_id":"keitheis"}],"title":"Coding test-driven Python package with CI and cloud"},"371495434037756045":{"abstract":"The popular hardware platforms that have emerged over the last 10 years have one thing in common: they all promote programming language monocultures. The platform manufacturers provide a single language, and strongly encourage all developers to use that one language for all projects - Javascript for browsers; Objective C (or Swift) for iOS; and Java for Android. Is it possible to break the language monoculture, and use Python on these new hardware platforms? Thankfully, the answer is yes. In this presentation, BeeWare Founding Apiarist Dr Russell Keith-Magee will show you how the BeeWare project has ported Python to a range of new hardware platforms.","category":"INTNL","detailed_description":"Stranger in a strange land: Using Python on new hardware platforms\n\nDespite many differences, the popular platforms that have emerged over the last 10 years have one thing in common: they all promote programming language monocultures. The platform manufacturers provide a single language, and strongly encourage all developers to use that one language for all projects - Javascript for browsers; Objective C (or Swift) for iOS; and Java for Android.\n\nBut what if you want to use Python? Is it possible to break the language monoculture, and port Python to these new hardware platforms platforms? Thankfully, the answer is yes. In this talk, you’ll learn how the BeeWare project has used the features of the Python language and standard library to enable Python code to run on in browsers, and on phones, tablets, set top boxes and watches. ","language":"ENEN","python_level":"EXPERIENCED","recording_policy":true,"slide_link":"","speakers":[{"bio":"Dr Russell Keith-Magee is a 10 year veteran of the Django core team, and for 5 years, was President of the Django Software Foundation. He's also the founder of the BeeWare project, developing GUI tools to support the development of Python software. He has keynoted Python conferences on all bar 2 continents, and will gladly keynote PyCon Antarctica as soon as the penguins get themselves organized. He has also put his feet in every ocean in the world (plus one sea). He lives in Perth, Western Australia with his wife, two children, and two animals that claim to be cats but have almost no feline properties.","email":"russell@keith-magee.com","facebook_profile_url":"https://www.facebook.com/russell.keithmagee","github_id":"freakboy3742","photo_url":"https://tw.pycon.org/staging/media/avatars/371490849411825949/2017-04-28-rusty-mugshot-djangocon-2017.png","speaker_name":"Russell Keith-Magee","twitter_id":"freakboy3742"}],"title":"Stranger in a Strange Land"},"381653012197671055":{"abstract":"目前聊天機器人可大致分為兩大類型，任務型及聊天型的聊天機器人．其中任務型的聊天機器人較常運用於一般商業應用的情境（如：購物、訂票），與任務型的聊天機器人不同的是，聊天型機器人較注重人機對話（Dialog）的內容、準確度，並且近一步吸引使用者的對話意願，延續對話長度，讓使用者覺得是在跟真人對話為目標．\r\n本次分享聊天型機器人(Messenger & LineBot)的實作經驗，以資訊檢索為基礎，深度學習為輔助，分享對於搜尋演算法的設計、自然語言處理的技巧（Language Model、Word2Vec）、深度學習模型（Seq2Seq與Seq2Seq的進階用法）、機器人部署架構，以及使用不同文本資料（如：電影字幕、PTT特定看板的討論內容）的心得。\r\n透過以上的分享及說明，讓參加者能對聊天機器人的實作有所了解，並且用python搭配不同的文本資料，打造屬於自己的聊天機器人。","category":"LIBS","detailed_description":"分享使用 PTT 語料製作聊天機器人的實作經驗，包含資料前處理、ML/DL、演算法、機器人串接，讓參加者能對聊天機器人的實作有所了解。\r\n\r\n* 使用套件：Django、Jieba、Word2Vec、Tensorflow\r\n* Bot平台：Facebook Messenger、Line Bot\r\n* 資料來源：中文電影字幕、PTT","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"現為後端工程師，持續關注人工智慧與機器學習的技術發展，玩過kaggle，對於相關的應用深感興趣。工作之餘，常揪三五好友參與讀書會與side project，目前在deeplearning101讀書會中研究RNN，並進行一個聊天機器人專案，歡迎入坑。","email":"ryanchao2012@gmail.com","facebook_profile_url":"https://www.facebook.com/ryan.chao.75","github_id":"ryanchao2012","speaker_name":"Ryan Chao","twitter_id":"ryanchao2012"}],"title":"鄉民教我做的聊天機器人"},"383193025678934160":{"abstract":"Unsupervised learning is how human learns. And generative adversarial networks is one of the most popular algorithms to do unsupervised learning. There are lots of GAN papers with amazing results. I would like to talk about issues of replicating GAN results and how I solved them.","category":"SCI","detailed_description":"There are many papers try to build models to generate images. Some of them try to tackle the problem from different point of views (probability or energy). Trainings fail easily if bad parameters are used. I want to talk about how the parameters (e.g. large learning rate) affect the trainings.","language":"ZHEN","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"覺得有趣選了物理系，結果差點畢不了業。想做遊戲所以開始寫程式，結果沒進過遊戲公司。覺得電腦圖學好玩，結果接觸了電腦視覺。覺得機器學習很酷，結果待續。現在在 KKStream 披著 Android Adaptive Player 的皮，企圖跟同事強迫推銷自己都不太懂的演算法。","email":"ironhead.chuang@gmail.com","facebook_profile_url":"https://www.facebook.com/ironhead.chuang","github_id":"imironhead","photo_url":"https://tw.pycon.org/staging/media/avatars/379465735082082598/2017-05-09-haha.jpg","speaker_name":"莊鐵鴻","twitter_id":""}],"title":"Amazing GANs"},"386517422489731217":{"abstract":"智慧對話機器人 (Intelligent Conversational Bot) 是人工智慧領域中近年來備受重視的一支，各個公司及個人都嘗試著架構專屬的聊天機器人 (ChatBot)。然而，聊天機器人的功能不僅僅侷限於聊天，能夠以對話的方式來協助人類完成各式各樣目標才是我們真正想要的人工智慧。聽完以後覺得心癢癢的，想要更了解對話機器人的腦子及靈魂內容嗎？此演講以深入淺出的方式帶你了解對話機器人如何實作及其相關應用場域。","category":"SCI","detailed_description":"","language":"ZHEN","python_level":"NOVICE","recording_policy":true,"slide_link":"","speakers":[{"bio":"陳縕儂出生於台灣台北，於卡內基美隆大學(CMU)中電腦科學院(SCS)之語言科技所(LTI)獲得博士學位。陳博士同時也擁有CMU的碩士學位、國立台灣大學 (NTU)資訊工程學系(CSIE)的學士及碩士學位。 \r\n\r\n陳博士的研究領域主要為語言理解、機器智慧、口語對話系統、深度學習、及自然語言處理之相關領域。 她曾榮獲IEEE ASRU 2013及IEEE SLT 2010的最佳學生論文獎、ISCA INTERSPEECH 2012之最佳學生論文提名、及ACLCLP之傑出碩士論文獎。","email":"alicia8267@gmail.com","facebook_profile_url":"https://www.facebook.com/vivianchen.tw","github_id":"yvchen","photo_url":"https://tw.pycon.org/staging/media/avatars/388324742454575401/2017-05-25-prague.jpg","speaker_name":"陳縕儂","twitter_id":"YunNungChen"}],"title":"對話機器人的腦子與靈魂 Bot's Brain and Soul"},"sponsored_6":{"abstract":"在這個演講中，將介紹在銀行之中，如何將一個全新概念，透過 Python 開門引路，最後成為企業內新服務、新通路的系統，這段企業內創新之路的介紹，相信對於許多想要透過 Python 開創自己的產品或企業內創新的同好，會是一個很好的故事。","category":"FIN","detailed_description":"引用套件: Flask, Requests","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"林鉦育 aha\r\n玉山銀行CRV創新研發小組襄理\r\n\r\naha於2007年畢業於台大物理所，專長：奈米光學模擬，2009年進入中研院資訊所，主要研究：participantory sensing(參與式感測)，研究如何透過個人裝置感測搜集資料，並整合拼湊完整巨觀環境變化，2013年入行，初任職為商業分析小組，著重於透過資料探索找出商機與企劃方向．2015年成立並加入創新研發小組，主要負責各式新技術評估與導入，同時規劃與評估相關商業模式的落地與執行，參與數位旗艦分行與玉山小i 隨身金融顧問等專案．\r\n\r\naha 專長於組裝各式語言與各大平台服務，打造最小可行產品原型．曾獲得2011 政府開放資料平台App社會組首獎．2015 PIXNET Mobile Service社會組首獎．同時關心社群與社會，如：Govcash 政治獻金研究是透過g0v的政治獻金數位化的成果；2014年為台灣資料科學愛好者年會R 課程講師．現正沈浸於台灣金融法規、具有台灣特色Fintech、AI、blockchain應用中．","email":"ntuaha@gmail.com","facebook_profile_url":"https://www.facebook.com/ntuaha","github_id":"ntuaha","photo_url":"https://tw.pycon.org/staging/media/avatars/70161675180834908/2017-05-13-2012-08-06_18.54.12_copy.png","speaker_name":"林鉦育","twitter_id":""}],"title":"Chatbot @ E.Sun Bank  – 玉山小i 隨身金融顧問的兩三事"},"sponsored_7":{"abstract":"1. Python 與 聊天機器人實作開發框架介紹\r\n2. 使用 Node-Red 圖像式開發，快速打造出個人化的Chatbot。\r\n3. 透過 Watson 人工智慧(影像及文字認知技術)優化聊天機器人對談。","category":"COM","detailed_description":"如何將 Watson 強大的認知洞察帶進您的應用程式中，與您 python 應用開發無縫合作。\r\n讓使用者能夠以使用自然語言的虛擬代理程式來控制您的應用程式","language":"ZHZH","python_level":"INTERMEDIATE","recording_policy":true,"slide_link":"","speakers":[{"bio":"吳志忠Tommy Wu\r\nIBM台灣雲端技術架構師\r\n\r\nTommy於2000年畢業於政大資管所，主修專長：物件導向設計及分散式處理，2004 年加入IBM，負責軟體工程及系統分析設計相關解決方案，曾多次於大型活動及研討會發表精采演說，目前他服務於雲端事業處，擔任Cloud solution Architect。\r\n\r\nTommy專長於AI與物聯網的創新運用，他將IBM Bluemix雲平台結合最新的認知技術Watson，開發出多種對話機器人，讓機器人可以依照指令完成唱歌、講故事，還可以連上維基百科、回答問題…等等。此外，他將聊天機器人結合LINE或FB，成為我們的行動小助理，充份的展現了認知運算與人工智慧的強大能力。","email":"tommywu@tw.ibm.com","facebook_profile_url":"https://www.facebook.com/tommy.wu.75","github_id":"tommywu052","photo_url":"https://tw.pycon.org/staging/media/avatars/374403816398782754/2017-05-09-tommy2.JPG","speaker_name":"吳志忠","twitter_id":""}],"title":"利用 Python 與人工智慧快速打造人性化聊天機器人"}}